{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/img/20230818103122.jpg","path":"img/20230818103122.jpg","modified":1,"renderable":0},{"_id":"source/img/20230822143445.jpg","path":"img/20230822143445.jpg","modified":1,"renderable":0},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/20230818103122.jpg","path":"img/20230818103122.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/20230823160932.png","path":"img/20230823160932.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/thumbbig-1221433.jpg","path":"img/thumbbig-1221433.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_data/link.yaml","hash":"80576ac894f882f25903e2ab824427b8d11988cd","modified":1692324729920},{"_id":"source/_posts/hello-world.md","hash":"9db9748dfecfc3146a3239035331efaf5cb9cf92","modified":1692774850502},{"_id":"source/about/index.md","hash":"67d4cc7108911b8662a0201bdabf042dbaef7b09","modified":1691119039026},{"_id":"source/_drafts/draft.md","hash":"b472be5771163e18b109ee34e0cc62ba571bb40d","modified":1692327202494},{"_id":"source/categories/index.md","hash":"d77b6f39e85b912ee0a4f6708974edf1677f7c8a","modified":1692324631370},{"_id":"source/link/index.md","hash":"b749372caa351fad232a4420c82ae06acca33d7a","modified":1692324680798},{"_id":"source/tags/index.md","hash":"fbfe43a3c44f87bafe265cc8d0ef3de7acbed1cf","modified":1692324602674},{"_id":"source/_posts/docker/uninstall_docker.md","hash":"fe3044b3520af04ef501894ee9345b302546540f","modified":1692856339606},{"_id":"source/_posts/golang/go_template.md","hash":"576c203bdf37b4a835f657a26c086ef704896acc","modified":1692773723180},{"_id":"source/_posts/golang/last_version_mod.md","hash":"3623367c5fa8c4ff5bc93b1d023e8b8844fe4f7e","modified":1692773729952},{"_id":"source/_posts/kubernetes/efk.md","hash":"07bac5cc6a41a1525479956266d636f71466ed6d","modified":1692866102494},{"_id":"source/_posts/kubernetes/fluent_Bit_Fluentd.md","hash":"aad3274f394baa501e2ac724183f136ec885b562","modified":1692864882291},{"_id":"source/_posts/kubernetes/monitor.md","hash":"4ddc99d69c473ffb33b4ad5bed84de4e4a072d3a","modified":1692773744756},{"_id":"source/_posts/kubernetes/uninstall_cintainerd.md","hash":"18cfe19dd7d2878fdbf3f37b6420a060227dd464","modified":1692689392616},{"_id":"source/_posts/nodejs/install_nodejs.md","hash":"46282da1aa96fc8843c1209df2da921cf4727795","modified":1692693367375},{"_id":"source/img/20230818103122.jpg","hash":"690b5dbaea6aff4c293708ec80de2ac601b3495c","modified":1692325882489},{"_id":"source/img/20230822143445.jpg","hash":"3a109901811ca6833fb3223189064fa867653bbf","modified":1692686095318},{"_id":"themes/butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1691120115272},{"_id":"themes/butterfly/README.md","hash":"b5d6e7271b88d1a63755386442663af03e36a428","modified":1691120115276},{"_id":"themes/butterfly/README_CN.md","hash":"86569b94949392e9b981608433495f0941d20b0c","modified":1691120115276},{"_id":"themes/butterfly/_config.yml","hash":"be87170c21e91b4eac9ccf9a76eb5adf16f048c3","modified":1692857608301},{"_id":"themes/butterfly/plugins.yml","hash":"d0e179ae31cdc62037062432b0ee7a9008155a73","modified":1691120115284},{"_id":"themes/butterfly/package.json","hash":"1646604798f745ef068852772eb22239985ba731","modified":1691120115284},{"_id":"themes/butterfly/languages/default.yml","hash":"4025c0ba440eb24705dd0293ca9ca84efb3105cc","modified":1691120115276},{"_id":"themes/butterfly/languages/en.yml","hash":"4e9cdb7a3570929bcf082de7a4eac49140dddc73","modified":1691120115276},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"7dd849c3ba34986c57c764d9e36150b4bfffd2e9","modified":1691120115276},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"ee01e068f12dc33adfae5733824ea1255deb5ca6","modified":1691120115276},{"_id":"themes/butterfly/layout/archive.pug","hash":"a0c034c2d319320a54046805e80b58dc48b7e233","modified":1691120115276},{"_id":"themes/butterfly/layout/category.pug","hash":"710708cfdb436bc875602abf096c919ccdf544db","modified":1691120115276},{"_id":"themes/butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1691120115284},{"_id":"themes/butterfly/layout/page.pug","hash":"baf469784aef227e4cc840550888554588e87a13","modified":1691120115284},{"_id":"themes/butterfly/layout/post.pug","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1691120115284},{"_id":"themes/butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1691120115284},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"cb49f737aca272ccfeb62880bd651eccee72a129","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"aca0ec7ef69b21d1f242c62fed389468a0f0e1a2","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"dd9fde431add984330e3178e06a8d74705e7340e","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"7fa9ae4b70b87fc97e992dde5944681f92b59bea","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"4c85de4dea4dca4e5088097a79bd6d7009cbf8ef","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"d15124c488273ea0801a042888feadc9261d0b2f","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"9f0e9e039f304439007460fa0a7c8ac18e0ffd37","modified":1691120115276},{"_id":"themes/butterfly/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":1691120115284},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"21fb5aabe043486d095c4c8cce361ed85ba88a26","modified":1691120115284},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"5351e0bc09e6b5b3f6d30f333a2520626a28ca3a","modified":1691120115284},{"_id":"themes/butterfly/scripts/events/init.js","hash":"428b94c7b9e83f7ea36227dee66bfe3c23aee4a8","modified":1691120115284},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"9819f0996234fbd80d6c50a9e526c56ebf22588d","modified":1691120115284},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"8ad9911b755cba13dde2cc055c3f857a6b0dd20e","modified":1691120115284},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"932df912976261929f809b7dbd4eb473e7787345","modified":1691120115284},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"8d25f47434deae870bbffd07efe528a40363ab4d","modified":1691120115284},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1691120115284},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"e00efdb5d02bc5c6eb4159e498af69fa61a7dbb9","modified":1691120115284},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"9ea86bd7a3c3fca3324f70b1cd4d9e42f9efb08d","modified":1691120115284},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"4238e06ff448ff2ee717cd4c874f37f04d35da06","modified":1691120115284},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"ce5d5a3d07b0d76ac5e96e5f9e5783f4b601b6be","modified":1691120115284},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"4677be4175da6800c0b3b8c1614e593f73df8831","modified":1691120115284},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"91d954f6e9fe6e571eb8ec9f8996294b2dc3688e","modified":1691120115284},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"ab62919fa567b95fbe14889517abda649991b1ee","modified":1691120115284},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"950b3dbac0b21717458a8d1769cbfc454d0eff54","modified":1691120115284},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"396c3ab1bcf1c7693ad7e506eadd13016c6769b6","modified":1691120115284},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"a43ee2c7871bdd93cb6beb804429e404570f7929","modified":1691120115284},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"03b2afef41d02bd1045c89578a02402c28356006","modified":1691120115284},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"531808a290b8bdd66bac2faab211ada8e9646a37","modified":1691120115284},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"d51812b43924f1bbf413c67499510dd125022005","modified":1691120115284},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"ea679dfe12d0e2290113b4a9d00663ce7a5ee5ad","modified":1691120115284},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"6c6e415623d0fd39da016d9e353bb4f5cca444f5","modified":1691120115284},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"300eb779588bf35a1b687d9f829d866074b707e3","modified":1691120115284},{"_id":"themes/butterfly/source/css/index.styl","hash":"755490867fd8afe47d5cce24faea2ca172b0c4dd","modified":1691120115292},{"_id":"themes/butterfly/source/css/var.styl","hash":"30abbb8eed880d51f61f336064d93abd709e0115","modified":1691120115292},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1691120115292},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1691120115292},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1691120115292},{"_id":"themes/butterfly/source/img/thumbbig-1221433.jpg","hash":"8c32ca61f09cf449dee0024a21972a3ad9c26eff","modified":1692857524894},{"_id":"themes/butterfly/source/js/main.js","hash":"0227b5bd233a3c66582e0ee820cdb353ce52ece1","modified":1691120115292},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"42b106354d72a0ea1fe62587b313a5b7de3cc393","modified":1691120115292},{"_id":"themes/butterfly/source/js/utils.js","hash":"aaaedc207440095da1ffabcad870fc2641befb0e","modified":1691120115292},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"8aa8d799aedbfd811195b84a451bc4b6e2647c12","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"67e1c3b48e4ca7ee0b2c76d3ca7476b9883cf105","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"75e7a524af64fbaaaf7b05a1b1922bf6940d7afe","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"7df90c8e432e33716517ab918b0a125bc284041b","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"d16ad2ee0ff5751fd7f8a5ce1b83935518674977","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"a03b3ddc06e7aa9fd07eea0d5f97c8d5addd2315","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"944d6e9dd50df3395f3a2c7ad9db667d50dea4ed","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"31346a210f4f9912c5b29f51d8f659913492f388","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"f61659aa457d1a2d1baa3a13157996cfac4d6609","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"9698f22751778dde063cbfbd01c59ca4462ccd85","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"5de9a82032cdad1db3b868b797460921cd775fc2","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"9e8c5788602b29a527ef35fe8a20076a5fa969bd","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"131f344d68b4c241d6e03849b243ee792fcd3cea","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"6ab4e301c92586505d6cddce1b3ad23b7c79010d","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"90554c2ca5ba946f4c02e1bc5fe2859cef1b1594","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"1ed873db25eec869beebb6873f04e19f0b0f4134","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"12c65c174d26a41821df9bad26cdf1087ec5b0ca","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"f9ce83978b217a71a2eb8761dc14b09866faa3f4","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"9621991359e22b14049346f1cf87bdedc94edf5a","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"ebecba46a5f4efe1c98a386df06c56e26fbd07b9","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"864869c43fe5b5bb6f4ac6b13dd4bfb16ea47550","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"c7cfade2b160380432c47eef4cd62273b6508c58","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"6528e86656906117a1af6b90e0349c2c4651d5e1","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"0f024e36b8116118233e10118714bde304e01e12","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"cde142861edfc7aab435b8a0ebb84d9ba450fb5b","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"ffb9ea15a2b54423cd4cd441e2d061b8233e9b58","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"8044b9c18b34b019ffe26b7383e7e80356b5e4b5","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"ae392459ad401a083ca51ee0b27526b3c1e1faed","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"03c6afabbf1ac729c7fb21c7ec06da0190b0fdc7","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1691120115284},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1691120115284},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"7834bf7c711e739fd33cfcd0b53d151013b3d449","modified":1691120115284},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"3057a2f6f051355e35d3b205121af8735100eacf","modified":1691120115284},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"e5aac7b28ed4123d75797263c64e74ac547945bc","modified":1691120115284},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"eceb4420a64c720f0d2741e89d6229bbb3d87353","modified":1691120115284},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1691120115284},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"35ce167c5a275211bfc1fa3d49adfde5b404d98f","modified":1691120115284},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"010e3d548ababca2280c4fc4168d9a4a1ee4f536","modified":1691120115284},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"e0de61a059b5e6c7b8ebc7149b4650bdcd69af5e","modified":1691120115284},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"51868d861c94a9f1ad7c0dbd66d2f475c5d4ea62","modified":1691120115284},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"57a19eb0c418d92a88b143f56ccb8cd60e6d7ad0","modified":1691120115284},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"bcd384c8b2aa0390c9eb69ac1abbfd1240ce1da4","modified":1691120115288},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"57adf29a3e36e4ea84384e36c034eb294dffb208","modified":1691120115288},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"f9a5d3f1fc5ed0ed2ee4c1eaa58ed650d11ddebd","modified":1691120115288},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"c61dccca690d486c3d9c29cf028d87b777385141","modified":1691120115288},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"83a7a70eb0532ea9c4267939fe484af915fca01e","modified":1691120115288},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"ac2aeee9926f75b2a0098efe1c114126987430f2","modified":1691120115288},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"8cd2aaa32cd68cd1908c9001444a811c3d0f9267","modified":1691120115288},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"fb9f78bfbb79579f1d752cb73fb6d25c8418e0fd","modified":1691120115288},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"fc9424d9c5def2201ec1d04dc79d0beedc1d2175","modified":1691120115288},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"d53de408cb27a2e704aba7f7402b7caebe0410d8","modified":1691120115288},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"c5cfed620708807a48076b5ee59b0ba84e29aa80","modified":1691120115288},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"bbc884d6b2158a833b77a1bbc07248e17874b22e","modified":1691120115288},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"631ca35a38bc4ac052e9caf47508ff1f99842fc7","modified":1691120115288},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"5556c9bf4f53a90cb9b4945cd76a8849bd67f3f3","modified":1691120115288},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"e4f948b0d4eb5483b2b360e56cbfe3359751b438","modified":1691120115288},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"c481d1f689a4e6d7ee492a03751bda47a30225ce","modified":1691120115288},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"50dbb9e6d98c71ffe16741b8c1b0c1b9771efd2b","modified":1691120115288},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"c9e98027f2dd730ce389c2047f62ebb748955fcf","modified":1691120115288},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"f01ee74948cedb44e53cd3bb1ef36b7d2778ede7","modified":1691120115288},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"98d755b686ee833e9da10afaa40c4ec2bd66c19a","modified":1691120115288},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"4e320e16d49bc18085045937681f7331a1e243ca","modified":1691120115288},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"b3ea08d9460122751144a3ca835e009a460d6ad3","modified":1691120115288},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"580feb7e8b0822a1be48ac380f8c5c53b1523321","modified":1691120115288},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"649a054e73278b6724bd4dd9b94724791ec5c928","modified":1691120115288},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"20a3134e1302b62bfc881f4ec43f398267111f22","modified":1691120115288},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"a86e4e9198b225b4b73a7a45f04b86cbbed0d231","modified":1691120115288},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"45f0c32bdea117540f6b14ebac6450d7142bd710","modified":1691120115292},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"81ad85acf0e0fe7f9ee23c16a700e7154574d5dd","modified":1691120115292},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"d76c38adf1d9c1279ef4241835667789f5b736e0","modified":1691120115292},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"ce489ca2e249e2a3cf71584e20d84bdb022e3475","modified":1691120115292},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1691120115292},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"66c59e193d794cdb02cca7bd1dc4aea5a19d7e84","modified":1691120115292},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"85ae91c83691ea4511f4277da1194a185251cc78","modified":1691120115292},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"bf9568444dd54e39dc59b461323dcd38942f27d9","modified":1691120115292},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"f071156d439556e7463ed4bc61ceee87170d5d08","modified":1691120115292},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1691120115292},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"fd86281d4f0f99ce173e49c1a0df3507fe268d37","modified":1691120115292},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"8509cbd954ee9e099dcfbbfdafba70893a56e9ae","modified":1691120115292},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"ed6906b7c6aa7046bbad95dfdda9211997be7099","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"5f86add36eeffbed61d11f08972a13697b4d9437","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d85c3737b5c9548553a78b757a7698df126a52cf","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"f58f1648d2d71311bafca4833f20b605bb5f18c8","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"0344477a2cf38698318ead2681c63ac12f01586e","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"b2d274db84ef22fbd6d5ea8f4404821898934209","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"001e8be47854b891efe04013c240c38fed4185eb","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"56c028ba0ea8fac19f0125114d765dfc56ce2b48","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"39427e107230a10790972349c9dd4c4f31d55eb7","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"d02f3cc9e6183e7d05c7e90e9ae1dee5ce21f297","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"ddce8352b371a1fb426bdb6c33f587eb37a69647","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"9b57a8e13de8fc51a5f550854e47164fd8ac1be8","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"2fb098a7aa45010a8cd212dc0bd5308c6e7c63e3","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"618e1b7f9204049b07beb9e1363c844a78a9ace3","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"e39a9c37adf4cb15a2ba3b2cc65542ffea88650d","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"dd61eca6e9a45f63e09bdefba89fe285a81ba096","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"5d5d8a0a3a7690d6d01e3feb91c2a36a5cd651b1","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"9ef303da16d180619da18b146ddb9bc35f66bdbf","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"6e17b2cea503eabeb328835038812cfa95f15871","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"0704efed9079c867ab5f7bee7381a6c869154c73","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"5127bc550a2edb1ab9f45416e1964c76e8201544","modified":1691120115276},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"2fc5627eb63118c83df9422b47c801822e28df98","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"00ed91c52939b9675b316137f854d13684c895a6","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"52ea8aa26b84d3ad38ae28cdf0f163e9ca8dced7","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"35ae7980f658a349c5956c5699efd435b604b836","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"598790433e3c9be28b0063bff08d257acd0abf75","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"4d78f6266d0870c06c10eaf47c951bd4d9a7732e","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"2a8d02ed9303092e8816f6489a443e7388102470","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"e55b9c0f8ced231f47eb88bd7f4ec99f29c5c29d","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"0a1b8fe95623b095eb7ede3f30ca327684d1e613","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"fc072ac839401174b5d3cf9acd3b694246c23a55","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"dfcbd9881be569ea420eff1a6b00e4f4dbe2138e","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"d0ce1891b042dcc2c93cacc866e38721b94aa4c4","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"8c0d9a45bd2d83cc6d0e7bbfe172a09ff33c0178","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"4fe8faf77b8420fc031ae1b54f78b2ece9fcc07e","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"0330e3063ccf0ce40e4828b8d4fbef62362e8195","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"4ec0642f2d5444acfab570a6f8c7868e7ff43fde","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"aa6061183a32472cd1882fce445a5049108a984b","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"44991d67abb81784c5cdb4337b2b9798fc4361e1","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"b7b2aa5be4112065d5066c0f066f5f58721153bf","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"ae1ccd78926cc19399d396b237d5161d7cde44a8","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"9c3c109a12d2b6916e8b4965cca12f521510ead9","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"1c3e101445c5571ba998ce293d3984319df1b3b0","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"a99a41334387ee9a46c6f8e8212331a29a10d159","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"5ebd5e8d39c9f77f5b2d983f6cd6802ccaf98746","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"85c92f8a7e44d7cd1c86f089a05be438535e5362","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4c4a9c15215ae8ac5eadb0e086b278f76db9ee92","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":1691120115280},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"c7dd2b2ae9b23aa0a60fffd7df9e9f76ef52033e","modified":1691120115280},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"cf1fae641c927621a4df1be5ca4a853b9b526e23","modified":1691120115284},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"18804c58239d95798fa86d0597f32d7f7dd30051","modified":1691120115284},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1691120115288},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"5dc2e0bcae9a54bfb9bdcc82d02ae5a3cf1ca97d","modified":1691120115288},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"8970cc1916c982b64a1478792b2822d1d31e276d","modified":1691120115288},{"_id":"themes/butterfly/source/img/20230818103122.jpg","hash":"690b5dbaea6aff4c293708ec80de2ac601b3495c","modified":1692325954425},{"_id":"themes/butterfly/source/img/20230823160932.png","hash":"9864346b852cb55c5fb3fdd45b80265e0f64bf20","modified":1692778176057},{"_id":"public/search.xml","hash":"ddbb1a265700ccec3a8100045a7687ffbce9bf4f","modified":1692866325010},{"_id":"public/about/index.html","hash":"0d124b35cdab5f749d5b2536f542712e89f487c2","modified":1692866325010},{"_id":"public/categories/index.html","hash":"1ee13108a94c74297a90030ec308874c85bffddf","modified":1692866325010},{"_id":"public/link/index.html","hash":"02105b2cb32ef94cab359ccc6da8f4046ad2a846","modified":1692866325010},{"_id":"public/tags/index.html","hash":"c14519d14af1c425bc5fb9d986f1985946b61e49","modified":1692866325010},{"_id":"public/2023/08/24/kubernetes/efk/index.html","hash":"55cafd59a41b011e0535b17f3d5e15b66f898086","modified":1692866325010},{"_id":"public/2023/08/24/kubernetes/fluent_Bit_Fluentd/index.html","hash":"da8672fe700f8010c18bedd277f45a0485ad7818","modified":1692866325010},{"_id":"public/2023/08/23/golang/go_template/index.html","hash":"9ed68c9ac08bccdee169e57811f4e08183b180d0","modified":1692866325010},{"_id":"public/2023/08/23/docker/uninstall_docker/index.html","hash":"5ee07ab9fa7828b416ae9912f6cb69ab704c24cb","modified":1692866325010},{"_id":"public/2023/08/22/nodejs/install_nodejs/index.html","hash":"735355a6508d36adf7cbfa1de7437c57c6cf101c","modified":1692866325010},{"_id":"public/2023/08/22/kubernetes/uninstall_cintainerd/index.html","hash":"07a456d0227897ba4cac8a21bd623982622b30ab","modified":1692866325010},{"_id":"public/2023/08/18/golang/last_version_mod/index.html","hash":"189a147a6c0be7547ca2c3544f25cad59a644d26","modified":1692866325010},{"_id":"public/2023/08/18/kubernetes/monitor/index.html","hash":"b8351b800aefc7dcf53c2cb8c807eefeebf1bbfc","modified":1692866325010},{"_id":"public/2023/08/04/hello-world/index.html","hash":"4db05296e0a79baad4ffba03287b7dff272c773e","modified":1692866325010},{"_id":"public/categories/docker/index.html","hash":"7cfb3b686b5709dfc809a8454f83e4d7b4192a30","modified":1692866325010},{"_id":"public/categories/golang/index.html","hash":"f56b5e51194509cf4a3700a8d9b719a4932cfc5c","modified":1692866325010},{"_id":"public/categories/kubernetes/index.html","hash":"f8526dac198e2f759dfe9aabecd3d6a2eb9b26b6","modified":1692866325010},{"_id":"public/archives/index.html","hash":"643ece65eb436aa723d97c592544a082a9b7b4c1","modified":1692866325010},{"_id":"public/archives/2023/index.html","hash":"0a2cc8e65a1f1a1f6fd05b955d21b2929c96800a","modified":1692866325010},{"_id":"public/archives/2023/08/index.html","hash":"8477b6954484347cc2cbab4d615699dab581ed19","modified":1692866325010},{"_id":"public/index.html","hash":"028c2b216509f890807e0b817b8b2a3b24a7fb57","modified":1692866325010},{"_id":"public/tags/docker/index.html","hash":"54e5974f90821acbf9ab73a7ad6f27b5c158d0ed","modified":1692866325010},{"_id":"public/tags/golang/index.html","hash":"e7e011da1be19eed4658e8fb235a96a9ea223516","modified":1692866325010},{"_id":"public/tags/logging/index.html","hash":"9105a4085e21f16e7c78626a6b24a3e963da861b","modified":1692866325010},{"_id":"public/tags/kubernetes/index.html","hash":"02ec54f3e208afd18809e8d0e8f785a31b5c2fc7","modified":1692866325010},{"_id":"public/tags/containerd/index.html","hash":"7cad69e1049f0c709f780dbdf07691b4eb59ef4a","modified":1692866325010},{"_id":"public/tags/nodejs/index.html","hash":"768cfcf06a896fb5b13c0f719f559479a08ece4d","modified":1692866325010},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1692866325010},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1692866325010},{"_id":"public/img/thumbbig-1221433.jpg","hash":"8c32ca61f09cf449dee0024a21972a3ad9c26eff","modified":1692866325010},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1692866325010},{"_id":"public/img/20230818103122.jpg","hash":"690b5dbaea6aff4c293708ec80de2ac601b3495c","modified":1692866325010},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1692866325010},{"_id":"public/js/utils.js","hash":"aaaedc207440095da1ffabcad870fc2641befb0e","modified":1692866325010},{"_id":"public/js/search/algolia.js","hash":"fd86281d4f0f99ce173e49c1a0df3507fe268d37","modified":1692866325010},{"_id":"public/js/search/local-search.js","hash":"8509cbd954ee9e099dcfbbfdafba70893a56e9ae","modified":1692866325010},{"_id":"public/css/index.css","hash":"d2ac9ea2eda7e3436cf544deaafd55ae1e3a81e3","modified":1692866325010},{"_id":"public/js/main.js","hash":"0227b5bd233a3c66582e0ee820cdb353ce52ece1","modified":1692866325010},{"_id":"public/js/tw_cn.js","hash":"42b106354d72a0ea1fe62587b313a5b7de3cc393","modified":1692866325010},{"_id":"public/img/20230822143445.jpg","hash":"3a109901811ca6833fb3223189064fa867653bbf","modified":1692866325010},{"_id":"public/img/20230823160932.png","hash":"9864346b852cb55c5fb3fdd45b80265e0f64bf20","modified":1692866325010}],"Category":[{"name":"docker","_id":"cllowwgw9000azejx2g9igc3e"},{"name":"golang","_id":"cllowwgwc000ezejxa2a9c2zp"},{"name":"kubernetes","_id":"cllowwgwm000ozejxcs8m3634"}],"Data":[{"_id":"link","data":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}],"Page":[{"title":"about","date":"2023-08-04T03:17:19.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2023-08-04 11:17:19\n---\n","updated":"2023-08-04T03:17:19.026Z","path":"about/index.html","comments":1,"layout":"page","_id":"cllowwgvc0000zejx2tdg7isp","content":"","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":""},{"title":"categories","date":"2023-08-18T02:10:06.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2023-08-18 10:10:06\ntype: \"categories\"\n---\n","updated":"2023-08-18T02:10:31.370Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cllowwgvt0002zejxewnr4nnb","content":"","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":""},{"title":"link","date":"2023-08-18T02:10:46.000Z","type":"link","_content":"","source":"link/index.md","raw":"---\ntitle: link\ndate: 2023-08-18 10:10:46\ntype: \"link\"\n---\n","updated":"2023-08-18T02:11:20.798Z","path":"link/index.html","comments":1,"layout":"page","_id":"cllowwgvz0004zejx6pz7at6u","content":"","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":""},{"title":"tags","date":"2023-08-18T02:08:43.000Z","type":"tags","orderby":"name","order":1,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2023-08-18 10:08:43\ntype: \"tags\"\norderby: name\norder: 1\n---\n","updated":"2023-08-18T02:10:02.674Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cllowwgw30006zejx108k2fpu","content":"","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":""}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\ndependencies:\n* node, npm\n* sudo npm install -g hexo-cli\n* sudo npm install hexo\n* npm install hexo-deployer-git --save\n* npm install hexo-generator-search --save\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\ndependencies:\n* node, npm\n* sudo npm install -g hexo-cli\n* sudo npm install hexo\n* npm install hexo-deployer-git --save\n* npm install hexo-generator-search --save\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2023-08-04T02:11:25.933Z","updated":"2023-08-23T07:14:10.502Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cllowwgvl0001zejxdc5s8trz","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><p>dependencies:</p>\n<ul>\n<li>node, npm</li>\n<li>sudo npm install -g hexo-cli</li>\n<li>sudo npm install hexo</li>\n<li>npm install hexo-deployer-git –save</li>\n<li>npm install hexo-generator-search –save</li>\n</ul>\n<h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><p>dependencies:</p>\n<ul>\n<li>node, npm</li>\n<li>sudo npm install -g hexo-cli</li>\n<li>sudo npm install hexo</li>\n<li>npm install hexo-deployer-git –save</li>\n<li>npm install hexo-generator-search –save</li>\n</ul>\n<h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"draft","_content":"","source":"_drafts/draft.md","raw":"---\ntitle: draft\ntags:\n---\n","slug":"draft","published":0,"date":"2023-08-18T02:53:22.494Z","updated":"2023-08-18T02:53:22.494Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cllowwgvv0003zejx7j2vb89x","content":"","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":""},{"title":"uninstall docker","date":"2023-08-23T05:53:22.000Z","comments":1,"_content":"要在CentOS 7上干净地卸载Docker，可以执行以下步骤：\n\n1. 停止Docker服务：\n\n```\nsudo systemctl stop docker\n```\n\n2. 移除所有Docker容器和镜像。这将删除所有相关数据，包括容器、镜像以及存储卷等。请注意，这将不可逆转地删除数据。\n\n```\nsudo rm -rf /var/lib/docker\n```\n\n3. 卸载Docker软件包。可以使用以下命令之一，根据Docker的安装方式选择相应的命令：\n\n- 如果Docker是通过`yum`进行安装的：\n\n```\nsudo yum remove docker-ce docker-ce-cli containerd.io\n```\n\n- 如果Docker是通过`dnf`进行安装的：\n\n```\nsudo dnf remove docker-ce docker-ce-cli containerd.io\n```\n\n- 如果Docker是通过RPM包进行手动安装的，可以使用以下命令之一：\n\n```\nsudo rpm -e docker-ce docker-ce-cli containerd.io\n```\n\n4. 删除相关配置文件：\n\n```\nsudo rm -rf /etc/docker\nsudo rm -rf /etc/systemd/system/docker.service.d\n```\n\n5. 删除用户组和用户（可选）：\n\n```\nsudo groupdel docker\nsudo userdel docker\n```\n\n完成以上步骤后，Docker将被完全卸载。","source":"_posts/docker/uninstall_docker.md","raw":"---\ntitle: uninstall docker\ndate: 2023-08-23 13:53:22\ncategories:\n  - [docker]\ntags: docker\ncomments: true\n---\n要在CentOS 7上干净地卸载Docker，可以执行以下步骤：\n\n1. 停止Docker服务：\n\n```\nsudo systemctl stop docker\n```\n\n2. 移除所有Docker容器和镜像。这将删除所有相关数据，包括容器、镜像以及存储卷等。请注意，这将不可逆转地删除数据。\n\n```\nsudo rm -rf /var/lib/docker\n```\n\n3. 卸载Docker软件包。可以使用以下命令之一，根据Docker的安装方式选择相应的命令：\n\n- 如果Docker是通过`yum`进行安装的：\n\n```\nsudo yum remove docker-ce docker-ce-cli containerd.io\n```\n\n- 如果Docker是通过`dnf`进行安装的：\n\n```\nsudo dnf remove docker-ce docker-ce-cli containerd.io\n```\n\n- 如果Docker是通过RPM包进行手动安装的，可以使用以下命令之一：\n\n```\nsudo rpm -e docker-ce docker-ce-cli containerd.io\n```\n\n4. 删除相关配置文件：\n\n```\nsudo rm -rf /etc/docker\nsudo rm -rf /etc/systemd/system/docker.service.d\n```\n\n5. 删除用户组和用户（可选）：\n\n```\nsudo groupdel docker\nsudo userdel docker\n```\n\n完成以上步骤后，Docker将被完全卸载。","slug":"docker/uninstall_docker","published":1,"updated":"2023-08-24T05:52:19.606Z","layout":"post","photos":[],"link":"","_id":"cllowwgw00005zejxbgnsftko","content":"<p>要在CentOS 7上干净地卸载Docker，可以执行以下步骤：</p>\n<ol>\n<li>停止Docker服务：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl stop docker</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>移除所有Docker容器和镜像。这将删除所有相关数据，包括容器、镜像以及存储卷等。请注意，这将不可逆转地删除数据。</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rm -rf /var/lib/docker</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>卸载Docker软件包。可以使用以下命令之一，根据Docker的安装方式选择相应的命令：</li>\n</ol>\n<ul>\n<li>如果Docker是通过<code>yum</code>进行安装的：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum remove docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>如果Docker是通过<code>dnf</code>进行安装的：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dnf remove docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>如果Docker是通过RPM包进行手动安装的，可以使用以下命令之一：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rpm -e docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>删除相关配置文件：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rm -rf /etc/docker</span><br><span class=\"line\">sudo rm -rf /etc/systemd/system/docker.service.d</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>删除用户组和用户（可选）：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo groupdel docker</span><br><span class=\"line\">sudo userdel docker</span><br></pre></td></tr></table></figure>\n\n<p>完成以上步骤后，Docker将被完全卸载。</p>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":"<p>要在CentOS 7上干净地卸载Docker，可以执行以下步骤：</p>\n<ol>\n<li>停止Docker服务：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl stop docker</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>移除所有Docker容器和镜像。这将删除所有相关数据，包括容器、镜像以及存储卷等。请注意，这将不可逆转地删除数据。</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rm -rf /var/lib/docker</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>卸载Docker软件包。可以使用以下命令之一，根据Docker的安装方式选择相应的命令：</li>\n</ol>\n<ul>\n<li>如果Docker是通过<code>yum</code>进行安装的：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum remove docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>如果Docker是通过<code>dnf</code>进行安装的：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dnf remove docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>如果Docker是通过RPM包进行手动安装的，可以使用以下命令之一：</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rpm -e docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li>删除相关配置文件：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rm -rf /etc/docker</span><br><span class=\"line\">sudo rm -rf /etc/systemd/system/docker.service.d</span><br></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li>删除用户组和用户（可选）：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo groupdel docker</span><br><span class=\"line\">sudo userdel docker</span><br></pre></td></tr></table></figure>\n\n<p>完成以上步骤后，Docker将被完全卸载。</p>\n"},{"title":"golang模板语法及预定义函数","date":"2023-08-23T06:52:39.000Z","_content":"在Go语言中，使用模板可以通过`text/template`或者`html/template`包来实现。这两个包的主要区别是，`html/template`包会自动对输出进行转义，以防止跨站点脚本攻击。\n\n下面是`text/template`和`html/template`包中常用的模板语法和示例：\n\n1. 注释：\n\n   可以使用`{{/* 注释内容 */}}`语法添加注释。注释可以在模板执行时忽略。\n\n   示例：\n   ```\n   {{/* This is a comment */}}\n   ```\n\n2. 输出变量值：\n\n   使用`{{.}}`语法输出当前的上下文变量值。\n\n   示例：\n   ```\n   {{.}}  // 输出当前上下文的变量值\n   ```\n\n3. 条件语句：\n\n   使用`{{if .Condition}} ... {{else}} ... {{end}}`语法进行条件判断。\n\n   示例：\n   ```\n   {{if .Condition}}\n       True Block\n   {{else}}\n       False Block\n   {{end}}\n   ```\n\n4. 循环语句：\n\n   使用`{{range .Slice}} ... {{end}}`语法进行循环迭代。\n\n   示例：\n   ```\n   {{range .Slice}}\n       {{.}}  // .表示当前迭代的元素\n   {{end}}\n   ```\n\n5. 定义和使用变量：\n\n   使用`{{with .Variable}} ... {{end}}`语法定义和使用临时变量。\n\n   示例：\n   ```\n   {{with .Variable}}\n       {{.}}  // 使用临时变量\n   {{end}}\n   ```\n\n6. 函数调用：\n\n   使用`{{函数名 参数1 参数2 ...}}`语法调用内置或自定义函数。\n\n   示例：\n   ```\n   {{len .String}}  // 调用len函数返回字符串的长度\n   ```\n\n7. 嵌套模板：\n\n   使用`{{template \"模板名称\" .数据}}`语法在模板中嵌套另一个模板。\n\n   示例：\n   ```\n   {{template \"header\" .PageTitle}}  // 嵌套名为\"header\"的模板，并传入.PageTitle参数\n   ```\n\n这些是常用的模板语法和示例，通过这些语法可以实现动态生成文本或者HTML代码的功能。具体使用方法可以参考Go语言文档中的模板包说明：https://golang.org/pkg/html/template/\n\n在Go语言的模板中，可以通过在模板中调用预定义的全局函数来进行一些常用的操作。Go语言的模板引擎提供了一些内置函数，这些函数可以在模板中直接使用，而不需要额外的导入。\n\n以下是一些常用的预定义全局函数：\n\n1. `and`：接受任意数量的布尔值作为参数，并返回它们的与运算结果。\n示例：\n```\n{{and true true}}  // true\n{{and true false}} // false\n```\n\n2. `or`：接受任意数量的布尔值作为参数，并返回它们的或运算结果。\n示例：\n```\n{{or true true}}  // true\n{{or true false}} // true\n```\n\n3. `not`：接受布尔值作为参数，并返回它的否定值。\n示例：\n```\n{{not true}}  // false\n{{not false}} // true\n```\n\n4. `eq`：用于比较两个值是否相等。\n示例：\n```\n{{eq 10 10}}   // true\n{{eq \"abc\" \"def\"}} // false\n```\n\n5. `ne`：用于比较两个值是否不相等。\n示例：\n```\n{{ne 10 20}}   // true\n{{ne \"abc\" \"abc\"}} // false\n```\n\n6. `lt`：用于比较两个值是否左边小于右边。\n示例：\n```\n{{lt 10 20}}   // true\n{{lt \"abc\" \"def\"}} // true\n```\n\n7. `le`：用于比较两个值是否左边小于等于右边。\n示例：\n```\n{{le 20 20}}   // true\n{{le \"abc\" \"def\"}} // true\n```\n\n8. `gt`：用于比较两个值是否左边大于右边。\n示例：\n```\n{{gt 20 10}}   // true\n{{gt \"def\" \"abc\"}} // true\n```\n\n9. `ge`：用于比较两个值是否左边大于等于右边。\n示例：\n```\n{{ge 20 20}}   // true\n{{ge \"def\" \"abc\"}} // true\n```\n\n10. `len`：返回一个字符串或数组的长度。\n示例：\n```\n{{len \"hello\"}}  // 5\n{{len .slice}}   // 数组或切片的长度\n```\n\n以上就是一些常用的预定义全局函数的使用方法和示例。使用这些函数可以在模板中进行一些基本的逻辑操作和比较。","source":"_posts/golang/go_template.md","raw":"---\ntitle: golang模板语法及预定义函数\ndate: 2023-08-23 14:52:39\ncategories:\n  - [golang]\ntags: golang\n---\n在Go语言中，使用模板可以通过`text/template`或者`html/template`包来实现。这两个包的主要区别是，`html/template`包会自动对输出进行转义，以防止跨站点脚本攻击。\n\n下面是`text/template`和`html/template`包中常用的模板语法和示例：\n\n1. 注释：\n\n   可以使用`{{/* 注释内容 */}}`语法添加注释。注释可以在模板执行时忽略。\n\n   示例：\n   ```\n   {{/* This is a comment */}}\n   ```\n\n2. 输出变量值：\n\n   使用`{{.}}`语法输出当前的上下文变量值。\n\n   示例：\n   ```\n   {{.}}  // 输出当前上下文的变量值\n   ```\n\n3. 条件语句：\n\n   使用`{{if .Condition}} ... {{else}} ... {{end}}`语法进行条件判断。\n\n   示例：\n   ```\n   {{if .Condition}}\n       True Block\n   {{else}}\n       False Block\n   {{end}}\n   ```\n\n4. 循环语句：\n\n   使用`{{range .Slice}} ... {{end}}`语法进行循环迭代。\n\n   示例：\n   ```\n   {{range .Slice}}\n       {{.}}  // .表示当前迭代的元素\n   {{end}}\n   ```\n\n5. 定义和使用变量：\n\n   使用`{{with .Variable}} ... {{end}}`语法定义和使用临时变量。\n\n   示例：\n   ```\n   {{with .Variable}}\n       {{.}}  // 使用临时变量\n   {{end}}\n   ```\n\n6. 函数调用：\n\n   使用`{{函数名 参数1 参数2 ...}}`语法调用内置或自定义函数。\n\n   示例：\n   ```\n   {{len .String}}  // 调用len函数返回字符串的长度\n   ```\n\n7. 嵌套模板：\n\n   使用`{{template \"模板名称\" .数据}}`语法在模板中嵌套另一个模板。\n\n   示例：\n   ```\n   {{template \"header\" .PageTitle}}  // 嵌套名为\"header\"的模板，并传入.PageTitle参数\n   ```\n\n这些是常用的模板语法和示例，通过这些语法可以实现动态生成文本或者HTML代码的功能。具体使用方法可以参考Go语言文档中的模板包说明：https://golang.org/pkg/html/template/\n\n在Go语言的模板中，可以通过在模板中调用预定义的全局函数来进行一些常用的操作。Go语言的模板引擎提供了一些内置函数，这些函数可以在模板中直接使用，而不需要额外的导入。\n\n以下是一些常用的预定义全局函数：\n\n1. `and`：接受任意数量的布尔值作为参数，并返回它们的与运算结果。\n示例：\n```\n{{and true true}}  // true\n{{and true false}} // false\n```\n\n2. `or`：接受任意数量的布尔值作为参数，并返回它们的或运算结果。\n示例：\n```\n{{or true true}}  // true\n{{or true false}} // true\n```\n\n3. `not`：接受布尔值作为参数，并返回它的否定值。\n示例：\n```\n{{not true}}  // false\n{{not false}} // true\n```\n\n4. `eq`：用于比较两个值是否相等。\n示例：\n```\n{{eq 10 10}}   // true\n{{eq \"abc\" \"def\"}} // false\n```\n\n5. `ne`：用于比较两个值是否不相等。\n示例：\n```\n{{ne 10 20}}   // true\n{{ne \"abc\" \"abc\"}} // false\n```\n\n6. `lt`：用于比较两个值是否左边小于右边。\n示例：\n```\n{{lt 10 20}}   // true\n{{lt \"abc\" \"def\"}} // true\n```\n\n7. `le`：用于比较两个值是否左边小于等于右边。\n示例：\n```\n{{le 20 20}}   // true\n{{le \"abc\" \"def\"}} // true\n```\n\n8. `gt`：用于比较两个值是否左边大于右边。\n示例：\n```\n{{gt 20 10}}   // true\n{{gt \"def\" \"abc\"}} // true\n```\n\n9. `ge`：用于比较两个值是否左边大于等于右边。\n示例：\n```\n{{ge 20 20}}   // true\n{{ge \"def\" \"abc\"}} // true\n```\n\n10. `len`：返回一个字符串或数组的长度。\n示例：\n```\n{{len \"hello\"}}  // 5\n{{len .slice}}   // 数组或切片的长度\n```\n\n以上就是一些常用的预定义全局函数的使用方法和示例。使用这些函数可以在模板中进行一些基本的逻辑操作和比较。","slug":"golang/go_template","published":1,"updated":"2023-08-23T06:55:23.180Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cllowwgw40007zejxhgtrboq6","content":"<p>在Go语言中，使用模板可以通过<code>text/template</code>或者<code>html/template</code>包来实现。这两个包的主要区别是，<code>html/template</code>包会自动对输出进行转义，以防止跨站点脚本攻击。</p>\n<p>下面是<code>text/template</code>和<code>html/template</code>包中常用的模板语法和示例：</p>\n<ol>\n<li><p>注释：</p>\n<p>可以使用<code>&#123;&#123;/* 注释内容 */&#125;&#125;</code>语法添加注释。注释可以在模板执行时忽略。</p>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;/* This is a comment */&#125;&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>输出变量值：</p>\n<p>使用<code>&#123;&#123;.&#125;&#125;</code>语法输出当前的上下文变量值。</p>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;.&#125;&#125;  // 输出当前上下文的变量值</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>条件语句：</p>\n<p>使用<code>&#123;&#123;if .Condition&#125;&#125; ... &#123;&#123;else&#125;&#125; ... &#123;&#123;end&#125;&#125;</code>语法进行条件判断。</p>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;if .Condition&#125;&#125;</span><br><span class=\"line\">    True Block</span><br><span class=\"line\">&#123;&#123;else&#125;&#125;</span><br><span class=\"line\">    False Block</span><br><span class=\"line\">&#123;&#123;end&#125;&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>循环语句：</p>\n<p>使用<code>&#123;&#123;range .Slice&#125;&#125; ... &#123;&#123;end&#125;&#125;</code>语法进行循环迭代。</p>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;range .Slice&#125;&#125;</span><br><span class=\"line\">    &#123;&#123;.&#125;&#125;  // .表示当前迭代的元素</span><br><span class=\"line\">&#123;&#123;end&#125;&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>定义和使用变量：</p>\n<p>使用<code>&#123;&#123;with .Variable&#125;&#125; ... &#123;&#123;end&#125;&#125;</code>语法定义和使用临时变量。</p>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;with .Variable&#125;&#125;</span><br><span class=\"line\">    &#123;&#123;.&#125;&#125;  // 使用临时变量</span><br><span class=\"line\">&#123;&#123;end&#125;&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>函数调用：</p>\n<p>使用<code>&#123;&#123;函数名 参数1 参数2 ...&#125;&#125;</code>语法调用内置或自定义函数。</p>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;len .String&#125;&#125;  // 调用len函数返回字符串的长度</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>嵌套模板：</p>\n<p>使用<code>&#123;&#123;template \"模板名称\" .数据&#125;&#125;</code>语法在模板中嵌套另一个模板。</p>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;template &quot;header&quot; .PageTitle&#125;&#125;  // 嵌套名为&quot;header&quot;的模板，并传入.PageTitle参数</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>这些是常用的模板语法和示例，通过这些语法可以实现动态生成文本或者HTML代码的功能。具体使用方法可以参考Go语言文档中的模板包说明：<a href=\"https://golang.org/pkg/html/template/\">https://golang.org/pkg/html/template/</a></p>\n<p>在Go语言的模板中，可以通过在模板中调用预定义的全局函数来进行一些常用的操作。Go语言的模板引擎提供了一些内置函数，这些函数可以在模板中直接使用，而不需要额外的导入。</p>\n<p>以下是一些常用的预定义全局函数：</p>\n<ol>\n<li><p><code>and</code>：接受任意数量的布尔值作为参数，并返回它们的与运算结果。<br>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;and true true&#125;&#125;  // true</span><br><span class=\"line\">&#123;&#123;and true false&#125;&#125; // false</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>or</code>：接受任意数量的布尔值作为参数，并返回它们的或运算结果。<br>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;or true true&#125;&#125;  // true</span><br><span class=\"line\">&#123;&#123;or true false&#125;&#125; // true</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>not</code>：接受布尔值作为参数，并返回它的否定值。<br>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;not true&#125;&#125;  // false</span><br><span class=\"line\">&#123;&#123;not false&#125;&#125; // true</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>eq</code>：用于比较两个值是否相等。<br>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;eq 10 10&#125;&#125;   // true</span><br><span class=\"line\">&#123;&#123;eq &quot;abc&quot; &quot;def&quot;&#125;&#125; // false</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>ne</code>：用于比较两个值是否不相等。<br>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;ne 10 20&#125;&#125;   // true</span><br><span class=\"line\">&#123;&#123;ne &quot;abc&quot; &quot;abc&quot;&#125;&#125; // false</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>lt</code>：用于比较两个值是否左边小于右边。<br>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;lt 10 20&#125;&#125;   // true</span><br><span class=\"line\">&#123;&#123;lt &quot;abc&quot; &quot;def&quot;&#125;&#125; // true</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>le</code>：用于比较两个值是否左边小于等于右边。<br>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;le 20 20&#125;&#125;   // true</span><br><span class=\"line\">&#123;&#123;le &quot;abc&quot; &quot;def&quot;&#125;&#125; // true</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>gt</code>：用于比较两个值是否左边大于右边。<br>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;gt 20 10&#125;&#125;   // true</span><br><span class=\"line\">&#123;&#123;gt &quot;def&quot; &quot;abc&quot;&#125;&#125; // true</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>ge</code>：用于比较两个值是否左边大于等于右边。<br>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;ge 20 20&#125;&#125;   // true</span><br><span class=\"line\">&#123;&#123;ge &quot;def&quot; &quot;abc&quot;&#125;&#125; // true</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>len</code>：返回一个字符串或数组的长度。<br>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;len &quot;hello&quot;&#125;&#125;  // 5</span><br><span class=\"line\">&#123;&#123;len .slice&#125;&#125;   // 数组或切片的长度</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>以上就是一些常用的预定义全局函数的使用方法和示例。使用这些函数可以在模板中进行一些基本的逻辑操作和比较。</p>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":"<p>在Go语言中，使用模板可以通过<code>text/template</code>或者<code>html/template</code>包来实现。这两个包的主要区别是，<code>html/template</code>包会自动对输出进行转义，以防止跨站点脚本攻击。</p>\n<p>下面是<code>text/template</code>和<code>html/template</code>包中常用的模板语法和示例：</p>\n<ol>\n<li><p>注释：</p>\n<p>可以使用<code>&#123;&#123;/* 注释内容 */&#125;&#125;</code>语法添加注释。注释可以在模板执行时忽略。</p>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;/* This is a comment */&#125;&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>输出变量值：</p>\n<p>使用<code>&#123;&#123;.&#125;&#125;</code>语法输出当前的上下文变量值。</p>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;.&#125;&#125;  // 输出当前上下文的变量值</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>条件语句：</p>\n<p>使用<code>&#123;&#123;if .Condition&#125;&#125; ... &#123;&#123;else&#125;&#125; ... &#123;&#123;end&#125;&#125;</code>语法进行条件判断。</p>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;if .Condition&#125;&#125;</span><br><span class=\"line\">    True Block</span><br><span class=\"line\">&#123;&#123;else&#125;&#125;</span><br><span class=\"line\">    False Block</span><br><span class=\"line\">&#123;&#123;end&#125;&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>循环语句：</p>\n<p>使用<code>&#123;&#123;range .Slice&#125;&#125; ... &#123;&#123;end&#125;&#125;</code>语法进行循环迭代。</p>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;range .Slice&#125;&#125;</span><br><span class=\"line\">    &#123;&#123;.&#125;&#125;  // .表示当前迭代的元素</span><br><span class=\"line\">&#123;&#123;end&#125;&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>定义和使用变量：</p>\n<p>使用<code>&#123;&#123;with .Variable&#125;&#125; ... &#123;&#123;end&#125;&#125;</code>语法定义和使用临时变量。</p>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;with .Variable&#125;&#125;</span><br><span class=\"line\">    &#123;&#123;.&#125;&#125;  // 使用临时变量</span><br><span class=\"line\">&#123;&#123;end&#125;&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>函数调用：</p>\n<p>使用<code>&#123;&#123;函数名 参数1 参数2 ...&#125;&#125;</code>语法调用内置或自定义函数。</p>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;len .String&#125;&#125;  // 调用len函数返回字符串的长度</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>嵌套模板：</p>\n<p>使用<code>&#123;&#123;template \"模板名称\" .数据&#125;&#125;</code>语法在模板中嵌套另一个模板。</p>\n<p>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;template &quot;header&quot; .PageTitle&#125;&#125;  // 嵌套名为&quot;header&quot;的模板，并传入.PageTitle参数</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>这些是常用的模板语法和示例，通过这些语法可以实现动态生成文本或者HTML代码的功能。具体使用方法可以参考Go语言文档中的模板包说明：<a href=\"https://golang.org/pkg/html/template/\">https://golang.org/pkg/html/template/</a></p>\n<p>在Go语言的模板中，可以通过在模板中调用预定义的全局函数来进行一些常用的操作。Go语言的模板引擎提供了一些内置函数，这些函数可以在模板中直接使用，而不需要额外的导入。</p>\n<p>以下是一些常用的预定义全局函数：</p>\n<ol>\n<li><p><code>and</code>：接受任意数量的布尔值作为参数，并返回它们的与运算结果。<br>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;and true true&#125;&#125;  // true</span><br><span class=\"line\">&#123;&#123;and true false&#125;&#125; // false</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>or</code>：接受任意数量的布尔值作为参数，并返回它们的或运算结果。<br>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;or true true&#125;&#125;  // true</span><br><span class=\"line\">&#123;&#123;or true false&#125;&#125; // true</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>not</code>：接受布尔值作为参数，并返回它的否定值。<br>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;not true&#125;&#125;  // false</span><br><span class=\"line\">&#123;&#123;not false&#125;&#125; // true</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>eq</code>：用于比较两个值是否相等。<br>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;eq 10 10&#125;&#125;   // true</span><br><span class=\"line\">&#123;&#123;eq &quot;abc&quot; &quot;def&quot;&#125;&#125; // false</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>ne</code>：用于比较两个值是否不相等。<br>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;ne 10 20&#125;&#125;   // true</span><br><span class=\"line\">&#123;&#123;ne &quot;abc&quot; &quot;abc&quot;&#125;&#125; // false</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>lt</code>：用于比较两个值是否左边小于右边。<br>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;lt 10 20&#125;&#125;   // true</span><br><span class=\"line\">&#123;&#123;lt &quot;abc&quot; &quot;def&quot;&#125;&#125; // true</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>le</code>：用于比较两个值是否左边小于等于右边。<br>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;le 20 20&#125;&#125;   // true</span><br><span class=\"line\">&#123;&#123;le &quot;abc&quot; &quot;def&quot;&#125;&#125; // true</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>gt</code>：用于比较两个值是否左边大于右边。<br>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;gt 20 10&#125;&#125;   // true</span><br><span class=\"line\">&#123;&#123;gt &quot;def&quot; &quot;abc&quot;&#125;&#125; // true</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>ge</code>：用于比较两个值是否左边大于等于右边。<br>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;ge 20 20&#125;&#125;   // true</span><br><span class=\"line\">&#123;&#123;ge &quot;def&quot; &quot;abc&quot;&#125;&#125; // true</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>len</code>：返回一个字符串或数组的长度。<br>示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;len &quot;hello&quot;&#125;&#125;  // 5</span><br><span class=\"line\">&#123;&#123;len .slice&#125;&#125;   // 数组或切片的长度</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>以上就是一些常用的预定义全局函数的使用方法和示例。使用这些函数可以在模板中进行一些基本的逻辑操作和比较。</p>\n"},{"title":"go mod使用最新提交","date":"2023-08-18T10:49:14.000Z","_content":"​\n例如一个项目在其中依赖了    github.com/linuxsuren/go-fake-runtime v0.0.1\n\ngo.mod内容：\n\n\tgithub.com/linuxsuren/go-fake-runtime v0.0.1\n\n修改了github.com/linuxsuren/go-fake-runtime代码，存在一个最新的commit hash值为25fa814c6232e545f5bce03bd4db04fc37e10250\n\n修改项目中的go.mod\n```\ngithub.com/linuxsuren/go-fake-runtime 25fa814c6232e545f5bce03bd4db04fc37e10250\n```\n然后执行go mod tidy,会看到go.mod中的依赖会更新为最新的提交\n```\ngithub.com/linuxsuren/go-fake-runtime v0.0.2-0.20230815071200-25fa814c6232\n```\n至此项目依赖的github.com/linuxsuren/go-fake-runtime已由v0.0.1版本更为指定的commit。\n\n​","source":"_posts/golang/last_version_mod.md","raw":"---\ntitle: go mod使用最新提交\ndate: 2023-08-18 18:49:14\ncategories:\n  - [golang]\ntags: golang\n---\n​\n例如一个项目在其中依赖了    github.com/linuxsuren/go-fake-runtime v0.0.1\n\ngo.mod内容：\n\n\tgithub.com/linuxsuren/go-fake-runtime v0.0.1\n\n修改了github.com/linuxsuren/go-fake-runtime代码，存在一个最新的commit hash值为25fa814c6232e545f5bce03bd4db04fc37e10250\n\n修改项目中的go.mod\n```\ngithub.com/linuxsuren/go-fake-runtime 25fa814c6232e545f5bce03bd4db04fc37e10250\n```\n然后执行go mod tidy,会看到go.mod中的依赖会更新为最新的提交\n```\ngithub.com/linuxsuren/go-fake-runtime v0.0.2-0.20230815071200-25fa814c6232\n```\n至此项目依赖的github.com/linuxsuren/go-fake-runtime已由v0.0.1版本更为指定的commit。\n\n​","slug":"golang/last_version_mod","published":1,"updated":"2023-08-23T06:55:29.952Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cllowwgw80009zejx8h9i5wui","content":"<p>​<br>例如一个项目在其中依赖了    github.com&#x2F;linuxsuren&#x2F;go-fake-runtime v0.0.1</p>\n<p>go.mod内容：</p>\n<pre><code>github.com/linuxsuren/go-fake-runtime v0.0.1\n</code></pre>\n<p>修改了github.com&#x2F;linuxsuren&#x2F;go-fake-runtime代码，存在一个最新的commit hash值为25fa814c6232e545f5bce03bd4db04fc37e10250</p>\n<p>修改项目中的go.mod</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">github.com/linuxsuren/go-fake-runtime 25fa814c6232e545f5bce03bd4db04fc37e10250</span><br></pre></td></tr></table></figure>\n<p>然后执行go mod tidy,会看到go.mod中的依赖会更新为最新的提交</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">github.com/linuxsuren/go-fake-runtime v0.0.2-0.20230815071200-25fa814c6232</span><br></pre></td></tr></table></figure>\n<p>至此项目依赖的github.com&#x2F;linuxsuren&#x2F;go-fake-runtime已由v0.0.1版本更为指定的commit。</p>\n<p>​</p>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":"<p>​<br>例如一个项目在其中依赖了    github.com&#x2F;linuxsuren&#x2F;go-fake-runtime v0.0.1</p>\n<p>go.mod内容：</p>\n<pre><code>github.com/linuxsuren/go-fake-runtime v0.0.1\n</code></pre>\n<p>修改了github.com&#x2F;linuxsuren&#x2F;go-fake-runtime代码，存在一个最新的commit hash值为25fa814c6232e545f5bce03bd4db04fc37e10250</p>\n<p>修改项目中的go.mod</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">github.com/linuxsuren/go-fake-runtime 25fa814c6232e545f5bce03bd4db04fc37e10250</span><br></pre></td></tr></table></figure>\n<p>然后执行go mod tidy,会看到go.mod中的依赖会更新为最新的提交</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">github.com/linuxsuren/go-fake-runtime v0.0.2-0.20230815071200-25fa814c6232</span><br></pre></td></tr></table></figure>\n<p>至此项目依赖的github.com&#x2F;linuxsuren&#x2F;go-fake-runtime已由v0.0.1版本更为指定的commit。</p>\n<p>​</p>\n"},{"title":"EFK","date":"2023-08-24T08:34:28.000Z","_content":"要在Kubernetes中部署Filebeat、Elasticsearch和Kibana来采集容器日志，可以按照以下步骤进行:\n\n1. 部署Elasticsearch:\n   在Kubernetes集群上创建一个Elasticsearch的Deployment，这个Deployment将用于存储和索引日志数据。可以使用以下示例配置文件创建Deployment:\n\n   ```yaml\n   apiVersion: apps/v1\n   kind: Deployment\n   metadata:\n     name: elasticsearch\n   spec:\n     replicas: 1\n     selector:\n       matchLabels:\n         app: elasticsearch\n     template:\n       metadata:\n         labels:\n           app: elasticsearch\n       spec:\n         containers:\n         - name: elasticsearch\n           image: elasticsearch:7.12.1\n           resources:\n             requests:\n               memory: 2Gi\n               cpu: 1\n           ports:\n           - containerPort: 9200\n   ```\n\n   运行`kubectl apply -f elasticsearch.yaml`命令来创建Deployment。\n\n2. 部署Kibana:\n   在Kubernetes集群上创建一个Kibana的Deployment，这个Deployment将用于可视化和查询日志数据。可以使用以下示例配置文件创建Deployment:\n\n   ```yaml\n   apiVersion: apps/v1\n   kind: Deployment\n   metadata:\n     name: kibana\n   spec:\n     replicas: 1\n     selector:\n       matchLabels:\n         app: kibana\n     template:\n       metadata:\n         labels:\n           app: kibana\n       spec:\n         containers:\n         - name: kibana\n           image: kibana:7.12.1\n           resources:\n             requests:\n               memory: 1Gi\n               cpu: 0.5\n           ports:\n           - containerPort: 5601\n   ```\n\n   运行`kubectl apply -f kibana.yaml`命令来创建Deployment。\n\n3. 部署Filebeat:\n   在Kubernetes集群上创建一个Filebeat DaemonSet，这个DaemonSet将在每个节点上运行一个Filebeat实例来收集容器日志。可以使用以下示例配置文件创建DaemonSet:\n\n   ```yaml\n   apiVersion: apps/v1\n   kind: DaemonSet\n   metadata:\n     name: filebeat\n     labels:\n       app: filebeat\n   spec:\n     selector:\n       matchLabels:\n         app: filebeat\n     template:\n       metadata:\n         labels:\n           app: filebeat\n       spec:\n         containers:\n         - name: filebeat\n           image: docker.elastic.co/beats/filebeat:7.12.1\n           volumeMounts:\n           - name: varlibdockercontainers\n             mountPath: /var/lib/docker/containers\n             readOnly: true\n           - name: varlog\n             mountPath: /var/log\n             readOnly: true\n           - name: varlogpod\n             mountPath: /var/log/pods\n             readOnly: true\n           - name: varrun\n             mountPath: /var/run\n           - name: varlibkubelet\n             mountPath: /var/lib/kubelet\n           - name: varlognode\n             mountPath: /var/log/node\n             readOnly: true\n           - name: varlogcontainersnew\n             mountPath: /var/log/containersnew\n             readOnly: true\n           - name: dockersocket\n             mountPath: /var/run/docker.sock\n           - name: config\n             mountPath: /usr/share/filebeat/filebeat.yml\n             subPath: filebeat.yml\n             readOnly: true\n           env:\n           - name: K8S_NODE_NAME\n             valueFrom:\n               fieldRef:\n                 fieldPath: spec.nodeName\n           - name: NODE_NAME\n             valueFrom:\n               fieldRef:\n                 fieldPath: spec.nodeName\n           - name: FILEBEAT_HOST\n             valueFrom:\n               fieldRef:\n                 fieldPath: status.hostIP\n           - name: FILEBEAT_CONFIG_CHECK_FREQUENCY\n             value: \"5s\"\n           - name: OUTPUT_TYPE\n             value: elasticsearch\n           - name: ELASTICSEARCH_HOST\n             value: elasticsearch:9200\n           - name: ELASTICSEARCH_USERNAME\n             value: \"<ELASTICSEARCH_USERNAME>\"\n           - name: ELASTICSEARCH_PASSWORD\n             value: \"<ELASTICSEARCH_PASSWORD>\"\n           - name: ELASTICSEARCH_INDEX\n             value: \"filebeat-%{[agent.version]}-%{+yyyy.MM.dd}\"\n           - name: ELASTICSEARCH_PIPELINE\n             value: \"<ELASTICSEARCH_PIPELINE>\"\n           resources:\n             limits:\n               memory: 200Mi\n             requests:\n               cpu: 100m\n               memory: 100Mi\n           terminationGracePeriodSeconds: 30\n           dnsPolicy: ClusterFirstWithHostNet\n           restartPolicy: Always\n           hostNetwork: true\n           volumes:\n           - name: varlibdockercontainers\n             hostPath:\n               path: /var/lib/docker/containers\n           - name: varlog\n             hostPath:\n               path: /var/log\n           - name: varlogpod\n             hostPath:\n               path: /var/log/pods\n           - name: varrun\n             hostPath:\n               path: /var/run\n           - name: varlibkubelet\n             hostPath:\n               path: /var/lib/kubelet\n           - name: varlognode\n             hostPath:\n               path: /var/log/node\n           - name: varlogcontainersnew\n             hostPath:\n               path: /var/log/containersnew\n           - name: dockersocket\n             hostPath:\n               path: /var/run/docker.sock\n           - name: config\n             configMap:\n               name: filebeat-config\n       updateStrategy:\n         type: RollingUpdate\n        rollingUpdate:\n           maxUnavailable: 1\n   ```\n\n   创建一个ConfigMap来存储Filebeat的配置文件(filebeat.yml)，示例配置文件可以参考以下内容:\n\n   ```yaml\n   filebeat.config:\n     modules:\n       path: ${path.config}/modules.d/*.yml\n       reload.enabled: false\n\n   filebeat.modules:\n   - module: system\n     syslog:\n       enabled: true\n     auth:\n       enabled: true\n     package:\n       enabled: true\n     coredns:\n       enabled: true\n\n   output.elasticsearch:\n     hosts: ['elasticsearch:9200']\n     username: '<ELASTICSEARCH_USERNAME>'\n     password: '<ELASTICSEARCH_PASSWORD>'\n     pipeline: '<ELASTICSEARCH_PIPELINE>'\n   ```\n\n   运行`kubectl create configmap filebeat-config --from-file=filebeat.yml`命令来创建ConfigMap。\n\n   然后，运行`kubectl apply -f filebeat.yaml`命令来创建DaemonSet。\n\n4. 日志采集:\n   当Filebeat启动后，它将开始采集Kubernetes集群中所有容器的日志数据，并将其发送到Elasticsearch进行存储和索引。您可以使用Kibana来可视化和查询这些日志数据。\n\n这是一个简单的部署Filebeat、Elasticsearch和Kibana来采集Kubernetes集群中容器日志的示例配置。根据您的实际需求，可能还需要进行一些其他的配置和调整。","source":"_posts/kubernetes/efk.md","raw":"---\ntitle: EFK\ndate: 2023-08-24 16:34:28\ncategories:\n  - [kubernetes]\ntags: logging\n---\n要在Kubernetes中部署Filebeat、Elasticsearch和Kibana来采集容器日志，可以按照以下步骤进行:\n\n1. 部署Elasticsearch:\n   在Kubernetes集群上创建一个Elasticsearch的Deployment，这个Deployment将用于存储和索引日志数据。可以使用以下示例配置文件创建Deployment:\n\n   ```yaml\n   apiVersion: apps/v1\n   kind: Deployment\n   metadata:\n     name: elasticsearch\n   spec:\n     replicas: 1\n     selector:\n       matchLabels:\n         app: elasticsearch\n     template:\n       metadata:\n         labels:\n           app: elasticsearch\n       spec:\n         containers:\n         - name: elasticsearch\n           image: elasticsearch:7.12.1\n           resources:\n             requests:\n               memory: 2Gi\n               cpu: 1\n           ports:\n           - containerPort: 9200\n   ```\n\n   运行`kubectl apply -f elasticsearch.yaml`命令来创建Deployment。\n\n2. 部署Kibana:\n   在Kubernetes集群上创建一个Kibana的Deployment，这个Deployment将用于可视化和查询日志数据。可以使用以下示例配置文件创建Deployment:\n\n   ```yaml\n   apiVersion: apps/v1\n   kind: Deployment\n   metadata:\n     name: kibana\n   spec:\n     replicas: 1\n     selector:\n       matchLabels:\n         app: kibana\n     template:\n       metadata:\n         labels:\n           app: kibana\n       spec:\n         containers:\n         - name: kibana\n           image: kibana:7.12.1\n           resources:\n             requests:\n               memory: 1Gi\n               cpu: 0.5\n           ports:\n           - containerPort: 5601\n   ```\n\n   运行`kubectl apply -f kibana.yaml`命令来创建Deployment。\n\n3. 部署Filebeat:\n   在Kubernetes集群上创建一个Filebeat DaemonSet，这个DaemonSet将在每个节点上运行一个Filebeat实例来收集容器日志。可以使用以下示例配置文件创建DaemonSet:\n\n   ```yaml\n   apiVersion: apps/v1\n   kind: DaemonSet\n   metadata:\n     name: filebeat\n     labels:\n       app: filebeat\n   spec:\n     selector:\n       matchLabels:\n         app: filebeat\n     template:\n       metadata:\n         labels:\n           app: filebeat\n       spec:\n         containers:\n         - name: filebeat\n           image: docker.elastic.co/beats/filebeat:7.12.1\n           volumeMounts:\n           - name: varlibdockercontainers\n             mountPath: /var/lib/docker/containers\n             readOnly: true\n           - name: varlog\n             mountPath: /var/log\n             readOnly: true\n           - name: varlogpod\n             mountPath: /var/log/pods\n             readOnly: true\n           - name: varrun\n             mountPath: /var/run\n           - name: varlibkubelet\n             mountPath: /var/lib/kubelet\n           - name: varlognode\n             mountPath: /var/log/node\n             readOnly: true\n           - name: varlogcontainersnew\n             mountPath: /var/log/containersnew\n             readOnly: true\n           - name: dockersocket\n             mountPath: /var/run/docker.sock\n           - name: config\n             mountPath: /usr/share/filebeat/filebeat.yml\n             subPath: filebeat.yml\n             readOnly: true\n           env:\n           - name: K8S_NODE_NAME\n             valueFrom:\n               fieldRef:\n                 fieldPath: spec.nodeName\n           - name: NODE_NAME\n             valueFrom:\n               fieldRef:\n                 fieldPath: spec.nodeName\n           - name: FILEBEAT_HOST\n             valueFrom:\n               fieldRef:\n                 fieldPath: status.hostIP\n           - name: FILEBEAT_CONFIG_CHECK_FREQUENCY\n             value: \"5s\"\n           - name: OUTPUT_TYPE\n             value: elasticsearch\n           - name: ELASTICSEARCH_HOST\n             value: elasticsearch:9200\n           - name: ELASTICSEARCH_USERNAME\n             value: \"<ELASTICSEARCH_USERNAME>\"\n           - name: ELASTICSEARCH_PASSWORD\n             value: \"<ELASTICSEARCH_PASSWORD>\"\n           - name: ELASTICSEARCH_INDEX\n             value: \"filebeat-%{[agent.version]}-%{+yyyy.MM.dd}\"\n           - name: ELASTICSEARCH_PIPELINE\n             value: \"<ELASTICSEARCH_PIPELINE>\"\n           resources:\n             limits:\n               memory: 200Mi\n             requests:\n               cpu: 100m\n               memory: 100Mi\n           terminationGracePeriodSeconds: 30\n           dnsPolicy: ClusterFirstWithHostNet\n           restartPolicy: Always\n           hostNetwork: true\n           volumes:\n           - name: varlibdockercontainers\n             hostPath:\n               path: /var/lib/docker/containers\n           - name: varlog\n             hostPath:\n               path: /var/log\n           - name: varlogpod\n             hostPath:\n               path: /var/log/pods\n           - name: varrun\n             hostPath:\n               path: /var/run\n           - name: varlibkubelet\n             hostPath:\n               path: /var/lib/kubelet\n           - name: varlognode\n             hostPath:\n               path: /var/log/node\n           - name: varlogcontainersnew\n             hostPath:\n               path: /var/log/containersnew\n           - name: dockersocket\n             hostPath:\n               path: /var/run/docker.sock\n           - name: config\n             configMap:\n               name: filebeat-config\n       updateStrategy:\n         type: RollingUpdate\n        rollingUpdate:\n           maxUnavailable: 1\n   ```\n\n   创建一个ConfigMap来存储Filebeat的配置文件(filebeat.yml)，示例配置文件可以参考以下内容:\n\n   ```yaml\n   filebeat.config:\n     modules:\n       path: ${path.config}/modules.d/*.yml\n       reload.enabled: false\n\n   filebeat.modules:\n   - module: system\n     syslog:\n       enabled: true\n     auth:\n       enabled: true\n     package:\n       enabled: true\n     coredns:\n       enabled: true\n\n   output.elasticsearch:\n     hosts: ['elasticsearch:9200']\n     username: '<ELASTICSEARCH_USERNAME>'\n     password: '<ELASTICSEARCH_PASSWORD>'\n     pipeline: '<ELASTICSEARCH_PIPELINE>'\n   ```\n\n   运行`kubectl create configmap filebeat-config --from-file=filebeat.yml`命令来创建ConfigMap。\n\n   然后，运行`kubectl apply -f filebeat.yaml`命令来创建DaemonSet。\n\n4. 日志采集:\n   当Filebeat启动后，它将开始采集Kubernetes集群中所有容器的日志数据，并将其发送到Elasticsearch进行存储和索引。您可以使用Kibana来可视化和查询这些日志数据。\n\n这是一个简单的部署Filebeat、Elasticsearch和Kibana来采集Kubernetes集群中容器日志的示例配置。根据您的实际需求，可能还需要进行一些其他的配置和调整。","slug":"kubernetes/efk","published":1,"updated":"2023-08-24T08:35:02.494Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cllowwgwa000bzejx2sgh9e5w","content":"<p>要在Kubernetes中部署Filebeat、Elasticsearch和Kibana来采集容器日志，可以按照以下步骤进行:</p>\n<ol>\n<li><p>部署Elasticsearch:<br>在Kubernetes集群上创建一个Elasticsearch的Deployment，这个Deployment将用于存储和索引日志数据。可以使用以下示例配置文件创建Deployment:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Deployment</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">elasticsearch</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">replicas:</span> <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"attr\">selector:</span></span><br><span class=\"line\">    <span class=\"attr\">matchLabels:</span></span><br><span class=\"line\">      <span class=\"attr\">app:</span> <span class=\"string\">elasticsearch</span></span><br><span class=\"line\">  <span class=\"attr\">template:</span></span><br><span class=\"line\">    <span class=\"attr\">metadata:</span></span><br><span class=\"line\">      <span class=\"attr\">labels:</span></span><br><span class=\"line\">        <span class=\"attr\">app:</span> <span class=\"string\">elasticsearch</span></span><br><span class=\"line\">    <span class=\"attr\">spec:</span></span><br><span class=\"line\">      <span class=\"attr\">containers:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">elasticsearch</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">elasticsearch:7.12.1</span></span><br><span class=\"line\">        <span class=\"attr\">resources:</span></span><br><span class=\"line\">          <span class=\"attr\">requests:</span></span><br><span class=\"line\">            <span class=\"attr\">memory:</span> <span class=\"string\">2Gi</span></span><br><span class=\"line\">            <span class=\"attr\">cpu:</span> <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">containerPort:</span> <span class=\"number\">9200</span></span><br></pre></td></tr></table></figure>\n\n<p>运行<code>kubectl apply -f elasticsearch.yaml</code>命令来创建Deployment。</p>\n</li>\n<li><p>部署Kibana:<br>在Kubernetes集群上创建一个Kibana的Deployment，这个Deployment将用于可视化和查询日志数据。可以使用以下示例配置文件创建Deployment:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Deployment</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">kibana</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">replicas:</span> <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"attr\">selector:</span></span><br><span class=\"line\">    <span class=\"attr\">matchLabels:</span></span><br><span class=\"line\">      <span class=\"attr\">app:</span> <span class=\"string\">kibana</span></span><br><span class=\"line\">  <span class=\"attr\">template:</span></span><br><span class=\"line\">    <span class=\"attr\">metadata:</span></span><br><span class=\"line\">      <span class=\"attr\">labels:</span></span><br><span class=\"line\">        <span class=\"attr\">app:</span> <span class=\"string\">kibana</span></span><br><span class=\"line\">    <span class=\"attr\">spec:</span></span><br><span class=\"line\">      <span class=\"attr\">containers:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">kibana</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">kibana:7.12.1</span></span><br><span class=\"line\">        <span class=\"attr\">resources:</span></span><br><span class=\"line\">          <span class=\"attr\">requests:</span></span><br><span class=\"line\">            <span class=\"attr\">memory:</span> <span class=\"string\">1Gi</span></span><br><span class=\"line\">            <span class=\"attr\">cpu:</span> <span class=\"number\">0.5</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">containerPort:</span> <span class=\"number\">5601</span></span><br></pre></td></tr></table></figure>\n\n<p>运行<code>kubectl apply -f kibana.yaml</code>命令来创建Deployment。</p>\n</li>\n<li><p>部署Filebeat:<br>在Kubernetes集群上创建一个Filebeat DaemonSet，这个DaemonSet将在每个节点上运行一个Filebeat实例来收集容器日志。可以使用以下示例配置文件创建DaemonSet:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">DaemonSet</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">filebeat</span></span><br><span class=\"line\">  <span class=\"attr\">labels:</span></span><br><span class=\"line\">    <span class=\"attr\">app:</span> <span class=\"string\">filebeat</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">selector:</span></span><br><span class=\"line\">    <span class=\"attr\">matchLabels:</span></span><br><span class=\"line\">      <span class=\"attr\">app:</span> <span class=\"string\">filebeat</span></span><br><span class=\"line\">  <span class=\"attr\">template:</span></span><br><span class=\"line\">    <span class=\"attr\">metadata:</span></span><br><span class=\"line\">      <span class=\"attr\">labels:</span></span><br><span class=\"line\">        <span class=\"attr\">app:</span> <span class=\"string\">filebeat</span></span><br><span class=\"line\">    <span class=\"attr\">spec:</span></span><br><span class=\"line\">      <span class=\"attr\">containers:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">filebeat</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">docker.elastic.co/beats/filebeat:7.12.1</span></span><br><span class=\"line\">        <span class=\"attr\">volumeMounts:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlibdockercontainers</span></span><br><span class=\"line\">          <span class=\"attr\">mountPath:</span> <span class=\"string\">/var/lib/docker/containers</span></span><br><span class=\"line\">          <span class=\"attr\">readOnly:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlog</span></span><br><span class=\"line\">          <span class=\"attr\">mountPath:</span> <span class=\"string\">/var/log</span></span><br><span class=\"line\">          <span class=\"attr\">readOnly:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlogpod</span></span><br><span class=\"line\">          <span class=\"attr\">mountPath:</span> <span class=\"string\">/var/log/pods</span></span><br><span class=\"line\">          <span class=\"attr\">readOnly:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varrun</span></span><br><span class=\"line\">          <span class=\"attr\">mountPath:</span> <span class=\"string\">/var/run</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlibkubelet</span></span><br><span class=\"line\">          <span class=\"attr\">mountPath:</span> <span class=\"string\">/var/lib/kubelet</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlognode</span></span><br><span class=\"line\">          <span class=\"attr\">mountPath:</span> <span class=\"string\">/var/log/node</span></span><br><span class=\"line\">          <span class=\"attr\">readOnly:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlogcontainersnew</span></span><br><span class=\"line\">          <span class=\"attr\">mountPath:</span> <span class=\"string\">/var/log/containersnew</span></span><br><span class=\"line\">          <span class=\"attr\">readOnly:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">dockersocket</span></span><br><span class=\"line\">          <span class=\"attr\">mountPath:</span> <span class=\"string\">/var/run/docker.sock</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">config</span></span><br><span class=\"line\">          <span class=\"attr\">mountPath:</span> <span class=\"string\">/usr/share/filebeat/filebeat.yml</span></span><br><span class=\"line\">          <span class=\"attr\">subPath:</span> <span class=\"string\">filebeat.yml</span></span><br><span class=\"line\">          <span class=\"attr\">readOnly:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">K8S_NODE_NAME</span></span><br><span class=\"line\">          <span class=\"attr\">valueFrom:</span></span><br><span class=\"line\">            <span class=\"attr\">fieldRef:</span></span><br><span class=\"line\">              <span class=\"attr\">fieldPath:</span> <span class=\"string\">spec.nodeName</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">NODE_NAME</span></span><br><span class=\"line\">          <span class=\"attr\">valueFrom:</span></span><br><span class=\"line\">            <span class=\"attr\">fieldRef:</span></span><br><span class=\"line\">              <span class=\"attr\">fieldPath:</span> <span class=\"string\">spec.nodeName</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">FILEBEAT_HOST</span></span><br><span class=\"line\">          <span class=\"attr\">valueFrom:</span></span><br><span class=\"line\">            <span class=\"attr\">fieldRef:</span></span><br><span class=\"line\">              <span class=\"attr\">fieldPath:</span> <span class=\"string\">status.hostIP</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">FILEBEAT_CONFIG_CHECK_FREQUENCY</span></span><br><span class=\"line\">          <span class=\"attr\">value:</span> <span class=\"string\">&quot;5s&quot;</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">OUTPUT_TYPE</span></span><br><span class=\"line\">          <span class=\"attr\">value:</span> <span class=\"string\">elasticsearch</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">ELASTICSEARCH_HOST</span></span><br><span class=\"line\">          <span class=\"attr\">value:</span> <span class=\"string\">elasticsearch:9200</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">ELASTICSEARCH_USERNAME</span></span><br><span class=\"line\">          <span class=\"attr\">value:</span> <span class=\"string\">&quot;&lt;ELASTICSEARCH_USERNAME&gt;&quot;</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">ELASTICSEARCH_PASSWORD</span></span><br><span class=\"line\">          <span class=\"attr\">value:</span> <span class=\"string\">&quot;&lt;ELASTICSEARCH_PASSWORD&gt;&quot;</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">ELASTICSEARCH_INDEX</span></span><br><span class=\"line\">          <span class=\"attr\">value:</span> <span class=\"string\">&quot;filebeat-<span class=\"template-variable\">%&#123;[agent.version]&#125;</span>-<span class=\"template-variable\">%&#123;+yyyy.MM.dd&#125;</span>&quot;</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">ELASTICSEARCH_PIPELINE</span></span><br><span class=\"line\">          <span class=\"attr\">value:</span> <span class=\"string\">&quot;&lt;ELASTICSEARCH_PIPELINE&gt;&quot;</span></span><br><span class=\"line\">        <span class=\"attr\">resources:</span></span><br><span class=\"line\">          <span class=\"attr\">limits:</span></span><br><span class=\"line\">            <span class=\"attr\">memory:</span> <span class=\"string\">200Mi</span></span><br><span class=\"line\">          <span class=\"attr\">requests:</span></span><br><span class=\"line\">            <span class=\"attr\">cpu:</span> <span class=\"string\">100m</span></span><br><span class=\"line\">            <span class=\"attr\">memory:</span> <span class=\"string\">100Mi</span></span><br><span class=\"line\">        <span class=\"attr\">terminationGracePeriodSeconds:</span> <span class=\"number\">30</span></span><br><span class=\"line\">        <span class=\"attr\">dnsPolicy:</span> <span class=\"string\">ClusterFirstWithHostNet</span></span><br><span class=\"line\">        <span class=\"attr\">restartPolicy:</span> <span class=\"string\">Always</span></span><br><span class=\"line\">        <span class=\"attr\">hostNetwork:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">volumes:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlibdockercontainers</span></span><br><span class=\"line\">          <span class=\"attr\">hostPath:</span></span><br><span class=\"line\">            <span class=\"attr\">path:</span> <span class=\"string\">/var/lib/docker/containers</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlog</span></span><br><span class=\"line\">          <span class=\"attr\">hostPath:</span></span><br><span class=\"line\">            <span class=\"attr\">path:</span> <span class=\"string\">/var/log</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlogpod</span></span><br><span class=\"line\">          <span class=\"attr\">hostPath:</span></span><br><span class=\"line\">            <span class=\"attr\">path:</span> <span class=\"string\">/var/log/pods</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varrun</span></span><br><span class=\"line\">          <span class=\"attr\">hostPath:</span></span><br><span class=\"line\">            <span class=\"attr\">path:</span> <span class=\"string\">/var/run</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlibkubelet</span></span><br><span class=\"line\">          <span class=\"attr\">hostPath:</span></span><br><span class=\"line\">            <span class=\"attr\">path:</span> <span class=\"string\">/var/lib/kubelet</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlognode</span></span><br><span class=\"line\">          <span class=\"attr\">hostPath:</span></span><br><span class=\"line\">            <span class=\"attr\">path:</span> <span class=\"string\">/var/log/node</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlogcontainersnew</span></span><br><span class=\"line\">          <span class=\"attr\">hostPath:</span></span><br><span class=\"line\">            <span class=\"attr\">path:</span> <span class=\"string\">/var/log/containersnew</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">dockersocket</span></span><br><span class=\"line\">          <span class=\"attr\">hostPath:</span></span><br><span class=\"line\">            <span class=\"attr\">path:</span> <span class=\"string\">/var/run/docker.sock</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">config</span></span><br><span class=\"line\">          <span class=\"attr\">configMap:</span></span><br><span class=\"line\">            <span class=\"attr\">name:</span> <span class=\"string\">filebeat-config</span></span><br><span class=\"line\">    <span class=\"attr\">updateStrategy:</span></span><br><span class=\"line\">      <span class=\"attr\">type:</span> <span class=\"string\">RollingUpdate</span></span><br><span class=\"line\">     <span class=\"attr\">rollingUpdate:</span></span><br><span class=\"line\">        <span class=\"attr\">maxUnavailable:</span> <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<p>创建一个ConfigMap来存储Filebeat的配置文件(filebeat.yml)，示例配置文件可以参考以下内容:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">filebeat.config:</span></span><br><span class=\"line\">  <span class=\"attr\">modules:</span></span><br><span class=\"line\">    <span class=\"attr\">path:</span> <span class=\"string\">$&#123;path.config&#125;/modules.d/*.yml</span></span><br><span class=\"line\">    <span class=\"attr\">reload.enabled:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">filebeat.modules:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">module:</span> <span class=\"string\">system</span></span><br><span class=\"line\">  <span class=\"attr\">syslog:</span></span><br><span class=\"line\">    <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">auth:</span></span><br><span class=\"line\">    <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">package:</span></span><br><span class=\"line\">    <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">coredns:</span></span><br><span class=\"line\">    <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">output.elasticsearch:</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> [<span class=\"string\">&#x27;elasticsearch:9200&#x27;</span>]</span><br><span class=\"line\">  <span class=\"attr\">username:</span> <span class=\"string\">&#x27;&lt;ELASTICSEARCH_USERNAME&gt;&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">password:</span> <span class=\"string\">&#x27;&lt;ELASTICSEARCH_PASSWORD&gt;&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">pipeline:</span> <span class=\"string\">&#x27;&lt;ELASTICSEARCH_PIPELINE&gt;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>运行<code>kubectl create configmap filebeat-config --from-file=filebeat.yml</code>命令来创建ConfigMap。</p>\n<p>然后，运行<code>kubectl apply -f filebeat.yaml</code>命令来创建DaemonSet。</p>\n</li>\n<li><p>日志采集:<br>当Filebeat启动后，它将开始采集Kubernetes集群中所有容器的日志数据，并将其发送到Elasticsearch进行存储和索引。您可以使用Kibana来可视化和查询这些日志数据。</p>\n</li>\n</ol>\n<p>这是一个简单的部署Filebeat、Elasticsearch和Kibana来采集Kubernetes集群中容器日志的示例配置。根据您的实际需求，可能还需要进行一些其他的配置和调整。</p>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":"<p>要在Kubernetes中部署Filebeat、Elasticsearch和Kibana来采集容器日志，可以按照以下步骤进行:</p>\n<ol>\n<li><p>部署Elasticsearch:<br>在Kubernetes集群上创建一个Elasticsearch的Deployment，这个Deployment将用于存储和索引日志数据。可以使用以下示例配置文件创建Deployment:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Deployment</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">elasticsearch</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">replicas:</span> <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"attr\">selector:</span></span><br><span class=\"line\">    <span class=\"attr\">matchLabels:</span></span><br><span class=\"line\">      <span class=\"attr\">app:</span> <span class=\"string\">elasticsearch</span></span><br><span class=\"line\">  <span class=\"attr\">template:</span></span><br><span class=\"line\">    <span class=\"attr\">metadata:</span></span><br><span class=\"line\">      <span class=\"attr\">labels:</span></span><br><span class=\"line\">        <span class=\"attr\">app:</span> <span class=\"string\">elasticsearch</span></span><br><span class=\"line\">    <span class=\"attr\">spec:</span></span><br><span class=\"line\">      <span class=\"attr\">containers:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">elasticsearch</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">elasticsearch:7.12.1</span></span><br><span class=\"line\">        <span class=\"attr\">resources:</span></span><br><span class=\"line\">          <span class=\"attr\">requests:</span></span><br><span class=\"line\">            <span class=\"attr\">memory:</span> <span class=\"string\">2Gi</span></span><br><span class=\"line\">            <span class=\"attr\">cpu:</span> <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">containerPort:</span> <span class=\"number\">9200</span></span><br></pre></td></tr></table></figure>\n\n<p>运行<code>kubectl apply -f elasticsearch.yaml</code>命令来创建Deployment。</p>\n</li>\n<li><p>部署Kibana:<br>在Kubernetes集群上创建一个Kibana的Deployment，这个Deployment将用于可视化和查询日志数据。可以使用以下示例配置文件创建Deployment:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Deployment</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">kibana</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">replicas:</span> <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"attr\">selector:</span></span><br><span class=\"line\">    <span class=\"attr\">matchLabels:</span></span><br><span class=\"line\">      <span class=\"attr\">app:</span> <span class=\"string\">kibana</span></span><br><span class=\"line\">  <span class=\"attr\">template:</span></span><br><span class=\"line\">    <span class=\"attr\">metadata:</span></span><br><span class=\"line\">      <span class=\"attr\">labels:</span></span><br><span class=\"line\">        <span class=\"attr\">app:</span> <span class=\"string\">kibana</span></span><br><span class=\"line\">    <span class=\"attr\">spec:</span></span><br><span class=\"line\">      <span class=\"attr\">containers:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">kibana</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">kibana:7.12.1</span></span><br><span class=\"line\">        <span class=\"attr\">resources:</span></span><br><span class=\"line\">          <span class=\"attr\">requests:</span></span><br><span class=\"line\">            <span class=\"attr\">memory:</span> <span class=\"string\">1Gi</span></span><br><span class=\"line\">            <span class=\"attr\">cpu:</span> <span class=\"number\">0.5</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">containerPort:</span> <span class=\"number\">5601</span></span><br></pre></td></tr></table></figure>\n\n<p>运行<code>kubectl apply -f kibana.yaml</code>命令来创建Deployment。</p>\n</li>\n<li><p>部署Filebeat:<br>在Kubernetes集群上创建一个Filebeat DaemonSet，这个DaemonSet将在每个节点上运行一个Filebeat实例来收集容器日志。可以使用以下示例配置文件创建DaemonSet:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">DaemonSet</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">filebeat</span></span><br><span class=\"line\">  <span class=\"attr\">labels:</span></span><br><span class=\"line\">    <span class=\"attr\">app:</span> <span class=\"string\">filebeat</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">selector:</span></span><br><span class=\"line\">    <span class=\"attr\">matchLabels:</span></span><br><span class=\"line\">      <span class=\"attr\">app:</span> <span class=\"string\">filebeat</span></span><br><span class=\"line\">  <span class=\"attr\">template:</span></span><br><span class=\"line\">    <span class=\"attr\">metadata:</span></span><br><span class=\"line\">      <span class=\"attr\">labels:</span></span><br><span class=\"line\">        <span class=\"attr\">app:</span> <span class=\"string\">filebeat</span></span><br><span class=\"line\">    <span class=\"attr\">spec:</span></span><br><span class=\"line\">      <span class=\"attr\">containers:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">filebeat</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">docker.elastic.co/beats/filebeat:7.12.1</span></span><br><span class=\"line\">        <span class=\"attr\">volumeMounts:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlibdockercontainers</span></span><br><span class=\"line\">          <span class=\"attr\">mountPath:</span> <span class=\"string\">/var/lib/docker/containers</span></span><br><span class=\"line\">          <span class=\"attr\">readOnly:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlog</span></span><br><span class=\"line\">          <span class=\"attr\">mountPath:</span> <span class=\"string\">/var/log</span></span><br><span class=\"line\">          <span class=\"attr\">readOnly:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlogpod</span></span><br><span class=\"line\">          <span class=\"attr\">mountPath:</span> <span class=\"string\">/var/log/pods</span></span><br><span class=\"line\">          <span class=\"attr\">readOnly:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varrun</span></span><br><span class=\"line\">          <span class=\"attr\">mountPath:</span> <span class=\"string\">/var/run</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlibkubelet</span></span><br><span class=\"line\">          <span class=\"attr\">mountPath:</span> <span class=\"string\">/var/lib/kubelet</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlognode</span></span><br><span class=\"line\">          <span class=\"attr\">mountPath:</span> <span class=\"string\">/var/log/node</span></span><br><span class=\"line\">          <span class=\"attr\">readOnly:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlogcontainersnew</span></span><br><span class=\"line\">          <span class=\"attr\">mountPath:</span> <span class=\"string\">/var/log/containersnew</span></span><br><span class=\"line\">          <span class=\"attr\">readOnly:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">dockersocket</span></span><br><span class=\"line\">          <span class=\"attr\">mountPath:</span> <span class=\"string\">/var/run/docker.sock</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">config</span></span><br><span class=\"line\">          <span class=\"attr\">mountPath:</span> <span class=\"string\">/usr/share/filebeat/filebeat.yml</span></span><br><span class=\"line\">          <span class=\"attr\">subPath:</span> <span class=\"string\">filebeat.yml</span></span><br><span class=\"line\">          <span class=\"attr\">readOnly:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">K8S_NODE_NAME</span></span><br><span class=\"line\">          <span class=\"attr\">valueFrom:</span></span><br><span class=\"line\">            <span class=\"attr\">fieldRef:</span></span><br><span class=\"line\">              <span class=\"attr\">fieldPath:</span> <span class=\"string\">spec.nodeName</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">NODE_NAME</span></span><br><span class=\"line\">          <span class=\"attr\">valueFrom:</span></span><br><span class=\"line\">            <span class=\"attr\">fieldRef:</span></span><br><span class=\"line\">              <span class=\"attr\">fieldPath:</span> <span class=\"string\">spec.nodeName</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">FILEBEAT_HOST</span></span><br><span class=\"line\">          <span class=\"attr\">valueFrom:</span></span><br><span class=\"line\">            <span class=\"attr\">fieldRef:</span></span><br><span class=\"line\">              <span class=\"attr\">fieldPath:</span> <span class=\"string\">status.hostIP</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">FILEBEAT_CONFIG_CHECK_FREQUENCY</span></span><br><span class=\"line\">          <span class=\"attr\">value:</span> <span class=\"string\">&quot;5s&quot;</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">OUTPUT_TYPE</span></span><br><span class=\"line\">          <span class=\"attr\">value:</span> <span class=\"string\">elasticsearch</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">ELASTICSEARCH_HOST</span></span><br><span class=\"line\">          <span class=\"attr\">value:</span> <span class=\"string\">elasticsearch:9200</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">ELASTICSEARCH_USERNAME</span></span><br><span class=\"line\">          <span class=\"attr\">value:</span> <span class=\"string\">&quot;&lt;ELASTICSEARCH_USERNAME&gt;&quot;</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">ELASTICSEARCH_PASSWORD</span></span><br><span class=\"line\">          <span class=\"attr\">value:</span> <span class=\"string\">&quot;&lt;ELASTICSEARCH_PASSWORD&gt;&quot;</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">ELASTICSEARCH_INDEX</span></span><br><span class=\"line\">          <span class=\"attr\">value:</span> <span class=\"string\">&quot;filebeat-<span class=\"template-variable\">%&#123;[agent.version]&#125;</span>-<span class=\"template-variable\">%&#123;+yyyy.MM.dd&#125;</span>&quot;</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">ELASTICSEARCH_PIPELINE</span></span><br><span class=\"line\">          <span class=\"attr\">value:</span> <span class=\"string\">&quot;&lt;ELASTICSEARCH_PIPELINE&gt;&quot;</span></span><br><span class=\"line\">        <span class=\"attr\">resources:</span></span><br><span class=\"line\">          <span class=\"attr\">limits:</span></span><br><span class=\"line\">            <span class=\"attr\">memory:</span> <span class=\"string\">200Mi</span></span><br><span class=\"line\">          <span class=\"attr\">requests:</span></span><br><span class=\"line\">            <span class=\"attr\">cpu:</span> <span class=\"string\">100m</span></span><br><span class=\"line\">            <span class=\"attr\">memory:</span> <span class=\"string\">100Mi</span></span><br><span class=\"line\">        <span class=\"attr\">terminationGracePeriodSeconds:</span> <span class=\"number\">30</span></span><br><span class=\"line\">        <span class=\"attr\">dnsPolicy:</span> <span class=\"string\">ClusterFirstWithHostNet</span></span><br><span class=\"line\">        <span class=\"attr\">restartPolicy:</span> <span class=\"string\">Always</span></span><br><span class=\"line\">        <span class=\"attr\">hostNetwork:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">volumes:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlibdockercontainers</span></span><br><span class=\"line\">          <span class=\"attr\">hostPath:</span></span><br><span class=\"line\">            <span class=\"attr\">path:</span> <span class=\"string\">/var/lib/docker/containers</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlog</span></span><br><span class=\"line\">          <span class=\"attr\">hostPath:</span></span><br><span class=\"line\">            <span class=\"attr\">path:</span> <span class=\"string\">/var/log</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlogpod</span></span><br><span class=\"line\">          <span class=\"attr\">hostPath:</span></span><br><span class=\"line\">            <span class=\"attr\">path:</span> <span class=\"string\">/var/log/pods</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varrun</span></span><br><span class=\"line\">          <span class=\"attr\">hostPath:</span></span><br><span class=\"line\">            <span class=\"attr\">path:</span> <span class=\"string\">/var/run</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlibkubelet</span></span><br><span class=\"line\">          <span class=\"attr\">hostPath:</span></span><br><span class=\"line\">            <span class=\"attr\">path:</span> <span class=\"string\">/var/lib/kubelet</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlognode</span></span><br><span class=\"line\">          <span class=\"attr\">hostPath:</span></span><br><span class=\"line\">            <span class=\"attr\">path:</span> <span class=\"string\">/var/log/node</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">varlogcontainersnew</span></span><br><span class=\"line\">          <span class=\"attr\">hostPath:</span></span><br><span class=\"line\">            <span class=\"attr\">path:</span> <span class=\"string\">/var/log/containersnew</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">dockersocket</span></span><br><span class=\"line\">          <span class=\"attr\">hostPath:</span></span><br><span class=\"line\">            <span class=\"attr\">path:</span> <span class=\"string\">/var/run/docker.sock</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">config</span></span><br><span class=\"line\">          <span class=\"attr\">configMap:</span></span><br><span class=\"line\">            <span class=\"attr\">name:</span> <span class=\"string\">filebeat-config</span></span><br><span class=\"line\">    <span class=\"attr\">updateStrategy:</span></span><br><span class=\"line\">      <span class=\"attr\">type:</span> <span class=\"string\">RollingUpdate</span></span><br><span class=\"line\">     <span class=\"attr\">rollingUpdate:</span></span><br><span class=\"line\">        <span class=\"attr\">maxUnavailable:</span> <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n\n<p>创建一个ConfigMap来存储Filebeat的配置文件(filebeat.yml)，示例配置文件可以参考以下内容:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">filebeat.config:</span></span><br><span class=\"line\">  <span class=\"attr\">modules:</span></span><br><span class=\"line\">    <span class=\"attr\">path:</span> <span class=\"string\">$&#123;path.config&#125;/modules.d/*.yml</span></span><br><span class=\"line\">    <span class=\"attr\">reload.enabled:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">filebeat.modules:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">module:</span> <span class=\"string\">system</span></span><br><span class=\"line\">  <span class=\"attr\">syslog:</span></span><br><span class=\"line\">    <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">auth:</span></span><br><span class=\"line\">    <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">package:</span></span><br><span class=\"line\">    <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">coredns:</span></span><br><span class=\"line\">    <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">output.elasticsearch:</span></span><br><span class=\"line\">  <span class=\"attr\">hosts:</span> [<span class=\"string\">&#x27;elasticsearch:9200&#x27;</span>]</span><br><span class=\"line\">  <span class=\"attr\">username:</span> <span class=\"string\">&#x27;&lt;ELASTICSEARCH_USERNAME&gt;&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">password:</span> <span class=\"string\">&#x27;&lt;ELASTICSEARCH_PASSWORD&gt;&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">pipeline:</span> <span class=\"string\">&#x27;&lt;ELASTICSEARCH_PIPELINE&gt;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>运行<code>kubectl create configmap filebeat-config --from-file=filebeat.yml</code>命令来创建ConfigMap。</p>\n<p>然后，运行<code>kubectl apply -f filebeat.yaml</code>命令来创建DaemonSet。</p>\n</li>\n<li><p>日志采集:<br>当Filebeat启动后，它将开始采集Kubernetes集群中所有容器的日志数据，并将其发送到Elasticsearch进行存储和索引。您可以使用Kibana来可视化和查询这些日志数据。</p>\n</li>\n</ol>\n<p>这是一个简单的部署Filebeat、Elasticsearch和Kibana来采集Kubernetes集群中容器日志的示例配置。根据您的实际需求，可能还需要进行一些其他的配置和调整。</p>\n"},{"title":"Fluent Bit和Fluentd之间的联系及区别","date":"2023-08-24T08:13:26.000Z","_content":"Fluent Bit和Fluentd是两个流行的开源日志收集工具，并且它们有一些共同的设计目标，但也有一些区别。\n\n1. Fluent Bit（轻量型的日志收集器）\nFluent Bit是一个轻量级和高性能的日志收集器，由Treasure Data公司开发。它专注于收集、过滤和转发日志，具有低内存占用和低性能开销的特点。Fluent Bit设计用于嵌入式系统和容器环境中，可以作为提供日志数据的终端。\n\n使用场景：\n- IoT设备：Fluent Bit作为嵌入式日志收集器，适用于在资源有限的物联网设备上收集日志数据。\n- 容器环境：Fluent Bit能够与Docker等容器平台无缝集成，并快速收集、聚合和转发容器日志。\n- 边缘计算：部署在边缘节点的Fluent Bit能够实时收集和传输边缘设备上的日志数据。\n\n使用方式：\n- 配置管理：通过配置文件定义输入源、过滤规则和输出目标。\n- 轻量级部署：由于其低资源消耗，Fluent Bit适合在嵌入式设备和容器中部署。\n- 插件支持：提供多种插件，如输入、过滤和输出插件，可根据需求扩展功能。\n\n2. Fluentd（全能型的日志收集引擎）\nFluentd是一个功能强大的开源日志收集和流数据处理引擎，也是由Treasure Data公司开发。它设计用于处理大规模和复杂的数据流，提供了更丰富的功能和灵活性。\n\n使用场景：\n- 日志聚合：收集来自多个源（文件、系统日志、应用程序日志等）的日志数据，并将其聚合到一处进行分析和存储。\n- 实时大数据处理：通过Fluentd的插件生态系统，可以将数据发送到Hadoop、Elasticsearch等数据处理和存储平台。\n- 日志路由和转换：Fluentd支持对日志数据进行过滤、标准化和转换，以便在不同目标之间进行路由。\n\n使用方式：\n- 插件生态系统：拥有丰富的插件生态系统，可用于收集、处理和转发各种类型的数据。\n- 高度可配置：通过配置文件进行配置，可以定义输入源、过滤器和输出目标，并自定义数据流的处理逻辑。\n- 部署灵活：Fluentd可以以独立进程或守护进程的形式部署，也可以在容器中运行。\n\n联系与区别：\n- 它们都是由Treasure Data公司开发的开源日志收集工具，具有类似的设计目标。\n- Fluent Bit更注重轻量级和高性能，适用于嵌入式和容器环境中的日志收集，而Fluentd则更适合处理大规模和复杂的数据流。\n- Fluent Bit的功能相对较少，专注于基本的日志收集、过滤和转发，而Fluentd具有更丰富的功能和插件生态系统。\n- Fluent Bit和Fluentd可以在同一系统中共存，实现多层次的日志收集和处理。\n\n总结：\nFluent Bit和Fluentd都是用于日志收集的工具，但根据应用场景和需求的不同，可以选择适合的工具。如果你需要一个轻量级的解决方案，以及在嵌入式设备和容器中高效收集和转发日志，可以选择Fluent Bit。而如果你面对复杂的数据流和需要更多功能和灵活性的场景，可以选择Fluentd。","source":"_posts/kubernetes/fluent_Bit_Fluentd.md","raw":"---\ntitle: Fluent Bit和Fluentd之间的联系及区别\ndate: 2023-08-24 16:13:26\ncategories:\n  - [kubernetes]\ntags: logging\n---\nFluent Bit和Fluentd是两个流行的开源日志收集工具，并且它们有一些共同的设计目标，但也有一些区别。\n\n1. Fluent Bit（轻量型的日志收集器）\nFluent Bit是一个轻量级和高性能的日志收集器，由Treasure Data公司开发。它专注于收集、过滤和转发日志，具有低内存占用和低性能开销的特点。Fluent Bit设计用于嵌入式系统和容器环境中，可以作为提供日志数据的终端。\n\n使用场景：\n- IoT设备：Fluent Bit作为嵌入式日志收集器，适用于在资源有限的物联网设备上收集日志数据。\n- 容器环境：Fluent Bit能够与Docker等容器平台无缝集成，并快速收集、聚合和转发容器日志。\n- 边缘计算：部署在边缘节点的Fluent Bit能够实时收集和传输边缘设备上的日志数据。\n\n使用方式：\n- 配置管理：通过配置文件定义输入源、过滤规则和输出目标。\n- 轻量级部署：由于其低资源消耗，Fluent Bit适合在嵌入式设备和容器中部署。\n- 插件支持：提供多种插件，如输入、过滤和输出插件，可根据需求扩展功能。\n\n2. Fluentd（全能型的日志收集引擎）\nFluentd是一个功能强大的开源日志收集和流数据处理引擎，也是由Treasure Data公司开发。它设计用于处理大规模和复杂的数据流，提供了更丰富的功能和灵活性。\n\n使用场景：\n- 日志聚合：收集来自多个源（文件、系统日志、应用程序日志等）的日志数据，并将其聚合到一处进行分析和存储。\n- 实时大数据处理：通过Fluentd的插件生态系统，可以将数据发送到Hadoop、Elasticsearch等数据处理和存储平台。\n- 日志路由和转换：Fluentd支持对日志数据进行过滤、标准化和转换，以便在不同目标之间进行路由。\n\n使用方式：\n- 插件生态系统：拥有丰富的插件生态系统，可用于收集、处理和转发各种类型的数据。\n- 高度可配置：通过配置文件进行配置，可以定义输入源、过滤器和输出目标，并自定义数据流的处理逻辑。\n- 部署灵活：Fluentd可以以独立进程或守护进程的形式部署，也可以在容器中运行。\n\n联系与区别：\n- 它们都是由Treasure Data公司开发的开源日志收集工具，具有类似的设计目标。\n- Fluent Bit更注重轻量级和高性能，适用于嵌入式和容器环境中的日志收集，而Fluentd则更适合处理大规模和复杂的数据流。\n- Fluent Bit的功能相对较少，专注于基本的日志收集、过滤和转发，而Fluentd具有更丰富的功能和插件生态系统。\n- Fluent Bit和Fluentd可以在同一系统中共存，实现多层次的日志收集和处理。\n\n总结：\nFluent Bit和Fluentd都是用于日志收集的工具，但根据应用场景和需求的不同，可以选择适合的工具。如果你需要一个轻量级的解决方案，以及在嵌入式设备和容器中高效收集和转发日志，可以选择Fluent Bit。而如果你面对复杂的数据流和需要更多功能和灵活性的场景，可以选择Fluentd。","slug":"kubernetes/fluent_Bit_Fluentd","published":1,"updated":"2023-08-24T08:14:42.291Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cllowwgwb000czejx4gd04ujh","content":"<p>Fluent Bit和Fluentd是两个流行的开源日志收集工具，并且它们有一些共同的设计目标，但也有一些区别。</p>\n<ol>\n<li>Fluent Bit（轻量型的日志收集器）<br>Fluent Bit是一个轻量级和高性能的日志收集器，由Treasure Data公司开发。它专注于收集、过滤和转发日志，具有低内存占用和低性能开销的特点。Fluent Bit设计用于嵌入式系统和容器环境中，可以作为提供日志数据的终端。</li>\n</ol>\n<p>使用场景：</p>\n<ul>\n<li>IoT设备：Fluent Bit作为嵌入式日志收集器，适用于在资源有限的物联网设备上收集日志数据。</li>\n<li>容器环境：Fluent Bit能够与Docker等容器平台无缝集成，并快速收集、聚合和转发容器日志。</li>\n<li>边缘计算：部署在边缘节点的Fluent Bit能够实时收集和传输边缘设备上的日志数据。</li>\n</ul>\n<p>使用方式：</p>\n<ul>\n<li>配置管理：通过配置文件定义输入源、过滤规则和输出目标。</li>\n<li>轻量级部署：由于其低资源消耗，Fluent Bit适合在嵌入式设备和容器中部署。</li>\n<li>插件支持：提供多种插件，如输入、过滤和输出插件，可根据需求扩展功能。</li>\n</ul>\n<ol start=\"2\">\n<li>Fluentd（全能型的日志收集引擎）<br>Fluentd是一个功能强大的开源日志收集和流数据处理引擎，也是由Treasure Data公司开发。它设计用于处理大规模和复杂的数据流，提供了更丰富的功能和灵活性。</li>\n</ol>\n<p>使用场景：</p>\n<ul>\n<li>日志聚合：收集来自多个源（文件、系统日志、应用程序日志等）的日志数据，并将其聚合到一处进行分析和存储。</li>\n<li>实时大数据处理：通过Fluentd的插件生态系统，可以将数据发送到Hadoop、Elasticsearch等数据处理和存储平台。</li>\n<li>日志路由和转换：Fluentd支持对日志数据进行过滤、标准化和转换，以便在不同目标之间进行路由。</li>\n</ul>\n<p>使用方式：</p>\n<ul>\n<li>插件生态系统：拥有丰富的插件生态系统，可用于收集、处理和转发各种类型的数据。</li>\n<li>高度可配置：通过配置文件进行配置，可以定义输入源、过滤器和输出目标，并自定义数据流的处理逻辑。</li>\n<li>部署灵活：Fluentd可以以独立进程或守护进程的形式部署，也可以在容器中运行。</li>\n</ul>\n<p>联系与区别：</p>\n<ul>\n<li>它们都是由Treasure Data公司开发的开源日志收集工具，具有类似的设计目标。</li>\n<li>Fluent Bit更注重轻量级和高性能，适用于嵌入式和容器环境中的日志收集，而Fluentd则更适合处理大规模和复杂的数据流。</li>\n<li>Fluent Bit的功能相对较少，专注于基本的日志收集、过滤和转发，而Fluentd具有更丰富的功能和插件生态系统。</li>\n<li>Fluent Bit和Fluentd可以在同一系统中共存，实现多层次的日志收集和处理。</li>\n</ul>\n<p>总结：<br>Fluent Bit和Fluentd都是用于日志收集的工具，但根据应用场景和需求的不同，可以选择适合的工具。如果你需要一个轻量级的解决方案，以及在嵌入式设备和容器中高效收集和转发日志，可以选择Fluent Bit。而如果你面对复杂的数据流和需要更多功能和灵活性的场景，可以选择Fluentd。</p>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":"<p>Fluent Bit和Fluentd是两个流行的开源日志收集工具，并且它们有一些共同的设计目标，但也有一些区别。</p>\n<ol>\n<li>Fluent Bit（轻量型的日志收集器）<br>Fluent Bit是一个轻量级和高性能的日志收集器，由Treasure Data公司开发。它专注于收集、过滤和转发日志，具有低内存占用和低性能开销的特点。Fluent Bit设计用于嵌入式系统和容器环境中，可以作为提供日志数据的终端。</li>\n</ol>\n<p>使用场景：</p>\n<ul>\n<li>IoT设备：Fluent Bit作为嵌入式日志收集器，适用于在资源有限的物联网设备上收集日志数据。</li>\n<li>容器环境：Fluent Bit能够与Docker等容器平台无缝集成，并快速收集、聚合和转发容器日志。</li>\n<li>边缘计算：部署在边缘节点的Fluent Bit能够实时收集和传输边缘设备上的日志数据。</li>\n</ul>\n<p>使用方式：</p>\n<ul>\n<li>配置管理：通过配置文件定义输入源、过滤规则和输出目标。</li>\n<li>轻量级部署：由于其低资源消耗，Fluent Bit适合在嵌入式设备和容器中部署。</li>\n<li>插件支持：提供多种插件，如输入、过滤和输出插件，可根据需求扩展功能。</li>\n</ul>\n<ol start=\"2\">\n<li>Fluentd（全能型的日志收集引擎）<br>Fluentd是一个功能强大的开源日志收集和流数据处理引擎，也是由Treasure Data公司开发。它设计用于处理大规模和复杂的数据流，提供了更丰富的功能和灵活性。</li>\n</ol>\n<p>使用场景：</p>\n<ul>\n<li>日志聚合：收集来自多个源（文件、系统日志、应用程序日志等）的日志数据，并将其聚合到一处进行分析和存储。</li>\n<li>实时大数据处理：通过Fluentd的插件生态系统，可以将数据发送到Hadoop、Elasticsearch等数据处理和存储平台。</li>\n<li>日志路由和转换：Fluentd支持对日志数据进行过滤、标准化和转换，以便在不同目标之间进行路由。</li>\n</ul>\n<p>使用方式：</p>\n<ul>\n<li>插件生态系统：拥有丰富的插件生态系统，可用于收集、处理和转发各种类型的数据。</li>\n<li>高度可配置：通过配置文件进行配置，可以定义输入源、过滤器和输出目标，并自定义数据流的处理逻辑。</li>\n<li>部署灵活：Fluentd可以以独立进程或守护进程的形式部署，也可以在容器中运行。</li>\n</ul>\n<p>联系与区别：</p>\n<ul>\n<li>它们都是由Treasure Data公司开发的开源日志收集工具，具有类似的设计目标。</li>\n<li>Fluent Bit更注重轻量级和高性能，适用于嵌入式和容器环境中的日志收集，而Fluentd则更适合处理大规模和复杂的数据流。</li>\n<li>Fluent Bit的功能相对较少，专注于基本的日志收集、过滤和转发，而Fluentd具有更丰富的功能和插件生态系统。</li>\n<li>Fluent Bit和Fluentd可以在同一系统中共存，实现多层次的日志收集和处理。</li>\n</ul>\n<p>总结：<br>Fluent Bit和Fluentd都是用于日志收集的工具，但根据应用场景和需求的不同，可以选择适合的工具。如果你需要一个轻量级的解决方案，以及在嵌入式设备和容器中高效收集和转发日志，可以选择Fluent Bit。而如果你面对复杂的数据流和需要更多功能和灵活性的场景，可以选择Fluentd。</p>\n"},{"title":"metrics/cadvisor,kube-state-metrics,node-exporter","date":"2023-08-18T10:30:53.000Z","_content":"# kubelet的metrics/cadvisor\nKubelet是Kubernetes主节点的一个核心组件，负责管理节点上的容器，以及与主控平面进行通信。Kubelet通过提供不同的接口和嵌入式组件来收集和暴露节点和容器的监控指标。\n\n1. Kubelet监控指标：\n   - Kubelet启动的Pod数目\n   - Kubelet已经完成的Pod数目\n   - Kubelet当前正在运行的Pod数目\n   - Kubelet拒绝启动的Pod数目\n   - Kubelet处理错误的Pod数目\n   - Kubelet未知状态的Pod数目\n   - Kubelet容器运行时间\n   - Kubelet容器CPU使用率\n   - Kubelet容器内存使用率\n   - Kubelet存储设备使用率\n   - Kubelet网络上行流量\n   - Kubelet网络下行流量\n   - Kubelet容器磁盘使用量\n   - Kubelet容器文件系统使用率\n   - Kubelet容器日志记录量\n\n2. cAdvisor监控指标：\n   - 容器的CPU使用率\n   - 容器的内存使用率\n   - 容器的磁盘使用率\n   - 容器的网络上行流量\n   - 容器的网络下行流量\n   - 容器的文件系统使用率\n   - 容器的日志记录量\n   - 容器的进程数\n   - 容器的打开文件数\n   - 容器的线程数\n   - 容器的磁盘I/O使用率\n   - 容器的网络延迟\n   - 容器的网络吞吐量\n   - 容器的内存压缩率\n   - 容器的内存丢失\n   - 容器的CPU限制与请求\n\n总体来说，Kubelet和cAdvisor提供了丰富的监控指标，可以用于监视节点和容器的资源使用情况、运行状态及性能状况。这些指标对于在Kubernetes集群中管理和优化容器化应用程序的性能和可靠性非常有帮助。\n# kube-state-metrics\nkube-state-metrics（KSM）是一个用于将Kubernetes集群的状态信息转换为Prometheus指标的开源项目。它可以提供丰富的监控指标，用于监控Kubernetes集群中的各种资源和对象。以下是Kube-state-metrics提供的一些主要监控指标：\n\n1. 节点指标（Node Metrics）：包括节点的CPU利用率、内存利用率、磁盘空间利用率等信息。\n\n2. Pod指标（Pod Metrics）：包括Pod的CPU利用率、内存利用率、网络流量等信息。\n\n3. 命名空间指标（Namespace Metrics）：包括命名空间中的Pod、Replication Controller、Deployment、DaemonSet等资源的数量和状态信息。\n\n4. 服务指标（Service Metrics）：包括服务的连接数、请求流量、响应时间等信息。\n\n5. 部署指标（Deployment Metrics）：包括部署的副本数量、可用副本数量、滚动更新状态等信息。\n\n6. 容器指标（Container Metrics）：包括容器的CPU利用率、内存利用率、文件系统使用情况等信息。\n\n7. StatefulSet指标（StatefulSet Metrics）：包括StatefulSet的副本数量、可用副本数量、当前状态等信息。\n\n8. 守护进程指标（DaemonSet Metrics）：包括DaemonSet的副本数量、可用副本数量、当前状态等信息。\n\n9. 任务指标（Job Metrics）：包括任务的运行状态、副本数量、成功和失败的次数等信息。\n\n这些指标可以提供关于Kubernetes集群和其中资源的性能、状态和健康状况的详细信息。使用这些指标，可以进行实时监控、性能优化、故障排除和容量规划，以确保集群的稳定性和可靠性。\n# node-exporter\nNode Exporter 是一种用于 Prometheus 的开源代理，用于暴露各种系统级监控指标。它可以在 Linux 系统上工作，并提供以下类型的监控指标：\n\n1. 系统指标：包括 CPU 使用率、内存使用率、磁盘使用率、磁盘 I/O 情况、网络流量、文件系统使用率等。这些指标可以帮助管理员了解系统的整体状态和资源利用情况。\n\n2. 进程指标：可以获取正在运行的进程数、进程CPU和内存使用情况、进程网络连接数等信息。通过这些指标，可以监控和识别系统中资源占用较多的进程，从而及时调整和优化。\n\n3. 网络指标：包括网络接口的带宽利用率、传输速率、丢包率和错误率等。这些指标可以帮助了解网络流量情况，监控网络性能和及时发现问题。\n\n4. 磁盘指标：包括磁盘使用率、磁盘读写速度、磁盘IO等。这些指标可以帮助监控磁盘的健康状况、数据读写速度和IO性能。\n\n5. 内存指标：包括内存使用量、内存交换情况、内存分页等。这些指标可以帮助了解内存的使用情况和性能。\n\n6. CPU 指标：包括 CPU 使用率、CPU 温度、CPU 核心数等。这些指标可以帮助监控系统的负载情况和CPU性能。\n\n7. 运行时间指标：包括系统的运行时间以及系统启动后的负载状况。这些指标可以帮助了解系统的稳定性和运行时间。\n\n除了以上列举的指标，Node Exporter 还提供了其他许多监控指标，以及一些自定义指标的扩展方式。用户可以根据需要选择性地监控和收集这些指标，以满足对系统性能和资源利用的需求。","source":"_posts/kubernetes/monitor.md","raw":"---\ntitle: metrics/cadvisor,kube-state-metrics,node-exporter\ndate: 2023-08-18 18:30:53\ncategories:\n  - [kubernetes]\ntags: kubernetes\n---\n# kubelet的metrics/cadvisor\nKubelet是Kubernetes主节点的一个核心组件，负责管理节点上的容器，以及与主控平面进行通信。Kubelet通过提供不同的接口和嵌入式组件来收集和暴露节点和容器的监控指标。\n\n1. Kubelet监控指标：\n   - Kubelet启动的Pod数目\n   - Kubelet已经完成的Pod数目\n   - Kubelet当前正在运行的Pod数目\n   - Kubelet拒绝启动的Pod数目\n   - Kubelet处理错误的Pod数目\n   - Kubelet未知状态的Pod数目\n   - Kubelet容器运行时间\n   - Kubelet容器CPU使用率\n   - Kubelet容器内存使用率\n   - Kubelet存储设备使用率\n   - Kubelet网络上行流量\n   - Kubelet网络下行流量\n   - Kubelet容器磁盘使用量\n   - Kubelet容器文件系统使用率\n   - Kubelet容器日志记录量\n\n2. cAdvisor监控指标：\n   - 容器的CPU使用率\n   - 容器的内存使用率\n   - 容器的磁盘使用率\n   - 容器的网络上行流量\n   - 容器的网络下行流量\n   - 容器的文件系统使用率\n   - 容器的日志记录量\n   - 容器的进程数\n   - 容器的打开文件数\n   - 容器的线程数\n   - 容器的磁盘I/O使用率\n   - 容器的网络延迟\n   - 容器的网络吞吐量\n   - 容器的内存压缩率\n   - 容器的内存丢失\n   - 容器的CPU限制与请求\n\n总体来说，Kubelet和cAdvisor提供了丰富的监控指标，可以用于监视节点和容器的资源使用情况、运行状态及性能状况。这些指标对于在Kubernetes集群中管理和优化容器化应用程序的性能和可靠性非常有帮助。\n# kube-state-metrics\nkube-state-metrics（KSM）是一个用于将Kubernetes集群的状态信息转换为Prometheus指标的开源项目。它可以提供丰富的监控指标，用于监控Kubernetes集群中的各种资源和对象。以下是Kube-state-metrics提供的一些主要监控指标：\n\n1. 节点指标（Node Metrics）：包括节点的CPU利用率、内存利用率、磁盘空间利用率等信息。\n\n2. Pod指标（Pod Metrics）：包括Pod的CPU利用率、内存利用率、网络流量等信息。\n\n3. 命名空间指标（Namespace Metrics）：包括命名空间中的Pod、Replication Controller、Deployment、DaemonSet等资源的数量和状态信息。\n\n4. 服务指标（Service Metrics）：包括服务的连接数、请求流量、响应时间等信息。\n\n5. 部署指标（Deployment Metrics）：包括部署的副本数量、可用副本数量、滚动更新状态等信息。\n\n6. 容器指标（Container Metrics）：包括容器的CPU利用率、内存利用率、文件系统使用情况等信息。\n\n7. StatefulSet指标（StatefulSet Metrics）：包括StatefulSet的副本数量、可用副本数量、当前状态等信息。\n\n8. 守护进程指标（DaemonSet Metrics）：包括DaemonSet的副本数量、可用副本数量、当前状态等信息。\n\n9. 任务指标（Job Metrics）：包括任务的运行状态、副本数量、成功和失败的次数等信息。\n\n这些指标可以提供关于Kubernetes集群和其中资源的性能、状态和健康状况的详细信息。使用这些指标，可以进行实时监控、性能优化、故障排除和容量规划，以确保集群的稳定性和可靠性。\n# node-exporter\nNode Exporter 是一种用于 Prometheus 的开源代理，用于暴露各种系统级监控指标。它可以在 Linux 系统上工作，并提供以下类型的监控指标：\n\n1. 系统指标：包括 CPU 使用率、内存使用率、磁盘使用率、磁盘 I/O 情况、网络流量、文件系统使用率等。这些指标可以帮助管理员了解系统的整体状态和资源利用情况。\n\n2. 进程指标：可以获取正在运行的进程数、进程CPU和内存使用情况、进程网络连接数等信息。通过这些指标，可以监控和识别系统中资源占用较多的进程，从而及时调整和优化。\n\n3. 网络指标：包括网络接口的带宽利用率、传输速率、丢包率和错误率等。这些指标可以帮助了解网络流量情况，监控网络性能和及时发现问题。\n\n4. 磁盘指标：包括磁盘使用率、磁盘读写速度、磁盘IO等。这些指标可以帮助监控磁盘的健康状况、数据读写速度和IO性能。\n\n5. 内存指标：包括内存使用量、内存交换情况、内存分页等。这些指标可以帮助了解内存的使用情况和性能。\n\n6. CPU 指标：包括 CPU 使用率、CPU 温度、CPU 核心数等。这些指标可以帮助监控系统的负载情况和CPU性能。\n\n7. 运行时间指标：包括系统的运行时间以及系统启动后的负载状况。这些指标可以帮助了解系统的稳定性和运行时间。\n\n除了以上列举的指标，Node Exporter 还提供了其他许多监控指标，以及一些自定义指标的扩展方式。用户可以根据需要选择性地监控和收集这些指标，以满足对系统性能和资源利用的需求。","slug":"kubernetes/monitor","published":1,"updated":"2023-08-23T06:55:44.756Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cllowwgwc000gzejx5db1hcsl","content":"<h1 id=\"kubelet的metrics-cadvisor\"><a href=\"#kubelet的metrics-cadvisor\" class=\"headerlink\" title=\"kubelet的metrics&#x2F;cadvisor\"></a>kubelet的metrics&#x2F;cadvisor</h1><p>Kubelet是Kubernetes主节点的一个核心组件，负责管理节点上的容器，以及与主控平面进行通信。Kubelet通过提供不同的接口和嵌入式组件来收集和暴露节点和容器的监控指标。</p>\n<ol>\n<li><p>Kubelet监控指标：</p>\n<ul>\n<li>Kubelet启动的Pod数目</li>\n<li>Kubelet已经完成的Pod数目</li>\n<li>Kubelet当前正在运行的Pod数目</li>\n<li>Kubelet拒绝启动的Pod数目</li>\n<li>Kubelet处理错误的Pod数目</li>\n<li>Kubelet未知状态的Pod数目</li>\n<li>Kubelet容器运行时间</li>\n<li>Kubelet容器CPU使用率</li>\n<li>Kubelet容器内存使用率</li>\n<li>Kubelet存储设备使用率</li>\n<li>Kubelet网络上行流量</li>\n<li>Kubelet网络下行流量</li>\n<li>Kubelet容器磁盘使用量</li>\n<li>Kubelet容器文件系统使用率</li>\n<li>Kubelet容器日志记录量</li>\n</ul>\n</li>\n<li><p>cAdvisor监控指标：</p>\n<ul>\n<li>容器的CPU使用率</li>\n<li>容器的内存使用率</li>\n<li>容器的磁盘使用率</li>\n<li>容器的网络上行流量</li>\n<li>容器的网络下行流量</li>\n<li>容器的文件系统使用率</li>\n<li>容器的日志记录量</li>\n<li>容器的进程数</li>\n<li>容器的打开文件数</li>\n<li>容器的线程数</li>\n<li>容器的磁盘I&#x2F;O使用率</li>\n<li>容器的网络延迟</li>\n<li>容器的网络吞吐量</li>\n<li>容器的内存压缩率</li>\n<li>容器的内存丢失</li>\n<li>容器的CPU限制与请求</li>\n</ul>\n</li>\n</ol>\n<p>总体来说，Kubelet和cAdvisor提供了丰富的监控指标，可以用于监视节点和容器的资源使用情况、运行状态及性能状况。这些指标对于在Kubernetes集群中管理和优化容器化应用程序的性能和可靠性非常有帮助。</p>\n<h1 id=\"kube-state-metrics\"><a href=\"#kube-state-metrics\" class=\"headerlink\" title=\"kube-state-metrics\"></a>kube-state-metrics</h1><p>kube-state-metrics（KSM）是一个用于将Kubernetes集群的状态信息转换为Prometheus指标的开源项目。它可以提供丰富的监控指标，用于监控Kubernetes集群中的各种资源和对象。以下是Kube-state-metrics提供的一些主要监控指标：</p>\n<ol>\n<li><p>节点指标（Node Metrics）：包括节点的CPU利用率、内存利用率、磁盘空间利用率等信息。</p>\n</li>\n<li><p>Pod指标（Pod Metrics）：包括Pod的CPU利用率、内存利用率、网络流量等信息。</p>\n</li>\n<li><p>命名空间指标（Namespace Metrics）：包括命名空间中的Pod、Replication Controller、Deployment、DaemonSet等资源的数量和状态信息。</p>\n</li>\n<li><p>服务指标（Service Metrics）：包括服务的连接数、请求流量、响应时间等信息。</p>\n</li>\n<li><p>部署指标（Deployment Metrics）：包括部署的副本数量、可用副本数量、滚动更新状态等信息。</p>\n</li>\n<li><p>容器指标（Container Metrics）：包括容器的CPU利用率、内存利用率、文件系统使用情况等信息。</p>\n</li>\n<li><p>StatefulSet指标（StatefulSet Metrics）：包括StatefulSet的副本数量、可用副本数量、当前状态等信息。</p>\n</li>\n<li><p>守护进程指标（DaemonSet Metrics）：包括DaemonSet的副本数量、可用副本数量、当前状态等信息。</p>\n</li>\n<li><p>任务指标（Job Metrics）：包括任务的运行状态、副本数量、成功和失败的次数等信息。</p>\n</li>\n</ol>\n<p>这些指标可以提供关于Kubernetes集群和其中资源的性能、状态和健康状况的详细信息。使用这些指标，可以进行实时监控、性能优化、故障排除和容量规划，以确保集群的稳定性和可靠性。</p>\n<h1 id=\"node-exporter\"><a href=\"#node-exporter\" class=\"headerlink\" title=\"node-exporter\"></a>node-exporter</h1><p>Node Exporter 是一种用于 Prometheus 的开源代理，用于暴露各种系统级监控指标。它可以在 Linux 系统上工作，并提供以下类型的监控指标：</p>\n<ol>\n<li><p>系统指标：包括 CPU 使用率、内存使用率、磁盘使用率、磁盘 I&#x2F;O 情况、网络流量、文件系统使用率等。这些指标可以帮助管理员了解系统的整体状态和资源利用情况。</p>\n</li>\n<li><p>进程指标：可以获取正在运行的进程数、进程CPU和内存使用情况、进程网络连接数等信息。通过这些指标，可以监控和识别系统中资源占用较多的进程，从而及时调整和优化。</p>\n</li>\n<li><p>网络指标：包括网络接口的带宽利用率、传输速率、丢包率和错误率等。这些指标可以帮助了解网络流量情况，监控网络性能和及时发现问题。</p>\n</li>\n<li><p>磁盘指标：包括磁盘使用率、磁盘读写速度、磁盘IO等。这些指标可以帮助监控磁盘的健康状况、数据读写速度和IO性能。</p>\n</li>\n<li><p>内存指标：包括内存使用量、内存交换情况、内存分页等。这些指标可以帮助了解内存的使用情况和性能。</p>\n</li>\n<li><p>CPU 指标：包括 CPU 使用率、CPU 温度、CPU 核心数等。这些指标可以帮助监控系统的负载情况和CPU性能。</p>\n</li>\n<li><p>运行时间指标：包括系统的运行时间以及系统启动后的负载状况。这些指标可以帮助了解系统的稳定性和运行时间。</p>\n</li>\n</ol>\n<p>除了以上列举的指标，Node Exporter 还提供了其他许多监控指标，以及一些自定义指标的扩展方式。用户可以根据需要选择性地监控和收集这些指标，以满足对系统性能和资源利用的需求。</p>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":"<h1 id=\"kubelet的metrics-cadvisor\"><a href=\"#kubelet的metrics-cadvisor\" class=\"headerlink\" title=\"kubelet的metrics&#x2F;cadvisor\"></a>kubelet的metrics&#x2F;cadvisor</h1><p>Kubelet是Kubernetes主节点的一个核心组件，负责管理节点上的容器，以及与主控平面进行通信。Kubelet通过提供不同的接口和嵌入式组件来收集和暴露节点和容器的监控指标。</p>\n<ol>\n<li><p>Kubelet监控指标：</p>\n<ul>\n<li>Kubelet启动的Pod数目</li>\n<li>Kubelet已经完成的Pod数目</li>\n<li>Kubelet当前正在运行的Pod数目</li>\n<li>Kubelet拒绝启动的Pod数目</li>\n<li>Kubelet处理错误的Pod数目</li>\n<li>Kubelet未知状态的Pod数目</li>\n<li>Kubelet容器运行时间</li>\n<li>Kubelet容器CPU使用率</li>\n<li>Kubelet容器内存使用率</li>\n<li>Kubelet存储设备使用率</li>\n<li>Kubelet网络上行流量</li>\n<li>Kubelet网络下行流量</li>\n<li>Kubelet容器磁盘使用量</li>\n<li>Kubelet容器文件系统使用率</li>\n<li>Kubelet容器日志记录量</li>\n</ul>\n</li>\n<li><p>cAdvisor监控指标：</p>\n<ul>\n<li>容器的CPU使用率</li>\n<li>容器的内存使用率</li>\n<li>容器的磁盘使用率</li>\n<li>容器的网络上行流量</li>\n<li>容器的网络下行流量</li>\n<li>容器的文件系统使用率</li>\n<li>容器的日志记录量</li>\n<li>容器的进程数</li>\n<li>容器的打开文件数</li>\n<li>容器的线程数</li>\n<li>容器的磁盘I&#x2F;O使用率</li>\n<li>容器的网络延迟</li>\n<li>容器的网络吞吐量</li>\n<li>容器的内存压缩率</li>\n<li>容器的内存丢失</li>\n<li>容器的CPU限制与请求</li>\n</ul>\n</li>\n</ol>\n<p>总体来说，Kubelet和cAdvisor提供了丰富的监控指标，可以用于监视节点和容器的资源使用情况、运行状态及性能状况。这些指标对于在Kubernetes集群中管理和优化容器化应用程序的性能和可靠性非常有帮助。</p>\n<h1 id=\"kube-state-metrics\"><a href=\"#kube-state-metrics\" class=\"headerlink\" title=\"kube-state-metrics\"></a>kube-state-metrics</h1><p>kube-state-metrics（KSM）是一个用于将Kubernetes集群的状态信息转换为Prometheus指标的开源项目。它可以提供丰富的监控指标，用于监控Kubernetes集群中的各种资源和对象。以下是Kube-state-metrics提供的一些主要监控指标：</p>\n<ol>\n<li><p>节点指标（Node Metrics）：包括节点的CPU利用率、内存利用率、磁盘空间利用率等信息。</p>\n</li>\n<li><p>Pod指标（Pod Metrics）：包括Pod的CPU利用率、内存利用率、网络流量等信息。</p>\n</li>\n<li><p>命名空间指标（Namespace Metrics）：包括命名空间中的Pod、Replication Controller、Deployment、DaemonSet等资源的数量和状态信息。</p>\n</li>\n<li><p>服务指标（Service Metrics）：包括服务的连接数、请求流量、响应时间等信息。</p>\n</li>\n<li><p>部署指标（Deployment Metrics）：包括部署的副本数量、可用副本数量、滚动更新状态等信息。</p>\n</li>\n<li><p>容器指标（Container Metrics）：包括容器的CPU利用率、内存利用率、文件系统使用情况等信息。</p>\n</li>\n<li><p>StatefulSet指标（StatefulSet Metrics）：包括StatefulSet的副本数量、可用副本数量、当前状态等信息。</p>\n</li>\n<li><p>守护进程指标（DaemonSet Metrics）：包括DaemonSet的副本数量、可用副本数量、当前状态等信息。</p>\n</li>\n<li><p>任务指标（Job Metrics）：包括任务的运行状态、副本数量、成功和失败的次数等信息。</p>\n</li>\n</ol>\n<p>这些指标可以提供关于Kubernetes集群和其中资源的性能、状态和健康状况的详细信息。使用这些指标，可以进行实时监控、性能优化、故障排除和容量规划，以确保集群的稳定性和可靠性。</p>\n<h1 id=\"node-exporter\"><a href=\"#node-exporter\" class=\"headerlink\" title=\"node-exporter\"></a>node-exporter</h1><p>Node Exporter 是一种用于 Prometheus 的开源代理，用于暴露各种系统级监控指标。它可以在 Linux 系统上工作，并提供以下类型的监控指标：</p>\n<ol>\n<li><p>系统指标：包括 CPU 使用率、内存使用率、磁盘使用率、磁盘 I&#x2F;O 情况、网络流量、文件系统使用率等。这些指标可以帮助管理员了解系统的整体状态和资源利用情况。</p>\n</li>\n<li><p>进程指标：可以获取正在运行的进程数、进程CPU和内存使用情况、进程网络连接数等信息。通过这些指标，可以监控和识别系统中资源占用较多的进程，从而及时调整和优化。</p>\n</li>\n<li><p>网络指标：包括网络接口的带宽利用率、传输速率、丢包率和错误率等。这些指标可以帮助了解网络流量情况，监控网络性能和及时发现问题。</p>\n</li>\n<li><p>磁盘指标：包括磁盘使用率、磁盘读写速度、磁盘IO等。这些指标可以帮助监控磁盘的健康状况、数据读写速度和IO性能。</p>\n</li>\n<li><p>内存指标：包括内存使用量、内存交换情况、内存分页等。这些指标可以帮助了解内存的使用情况和性能。</p>\n</li>\n<li><p>CPU 指标：包括 CPU 使用率、CPU 温度、CPU 核心数等。这些指标可以帮助监控系统的负载情况和CPU性能。</p>\n</li>\n<li><p>运行时间指标：包括系统的运行时间以及系统启动后的负载状况。这些指标可以帮助了解系统的稳定性和运行时间。</p>\n</li>\n</ol>\n<p>除了以上列举的指标，Node Exporter 还提供了其他许多监控指标，以及一些自定义指标的扩展方式。用户可以根据需要选择性地监控和收集这些指标，以满足对系统性能和资源利用的需求。</p>\n"},{"title":"uninstall containerd","date":"2023-08-22T03:39:52.000Z","_content":"要彻底清除 Kubernetes 集群节点上的 containerd，可以按照以下步骤进行：\n\nStep 1: 停止并移除所有运行的容器\n```\n$ crictl ps -a | awk '{if(NR>1) print $1}' | xargs -I {} crictl rm {}\n```\n这将停止并删除节点上所有正在运行的容器。\n\nStep 2: 停止并禁用 containerd 服务\n```\n$ systemctl stop containerd\n$ systemctl disable containerd\n```\n这将停止并禁用 containerd 服务。\n\nStep 3: 卸载 containerd 软件包\n```\n$ yum remove containerd -y\n```\n根据你的系统，可能需要使用适当的软件包管理器（如apt、dnf）来移除 containerd 软件包。\n\nStep 4: 删除 containerd 配置目录\n```\n$ rm -rf /etc/containerd\n```\n这将删除 containerd 的配置文件。\n\nStep 5: 删除 containerd 数据目录\n```\n$ rm -rf /var/lib/containerd\n```\n这将删除 containerd 的数据目录。\n\nStep 6: 清理 containerd 相关的 iptables 规则\n```\n$ iptables -t nat -F\n$ iptables -t mangle -F\n```\n这将清除与 containerd 相关的 iptables 规则。\n\nStep 7: 检查是否有残留的 containerd 配置文件\n```\n$ ls /etc/systemd/system/containerd*\n```\n如果输出中有任何文件，则手动删除它们：\n```\n$ rm /etc/systemd/system/containerd*.service\n```\n\n现在，你的 Kubernetes 集群节点上的 containerd 已经彻底卸载。","source":"_posts/kubernetes/uninstall_cintainerd.md","raw":"---\ntitle: uninstall containerd\ndate: 2023-08-22 11:39:52\ncategories:\n  - [kubernetes]\ntags: containerd\n---\n要彻底清除 Kubernetes 集群节点上的 containerd，可以按照以下步骤进行：\n\nStep 1: 停止并移除所有运行的容器\n```\n$ crictl ps -a | awk '{if(NR>1) print $1}' | xargs -I {} crictl rm {}\n```\n这将停止并删除节点上所有正在运行的容器。\n\nStep 2: 停止并禁用 containerd 服务\n```\n$ systemctl stop containerd\n$ systemctl disable containerd\n```\n这将停止并禁用 containerd 服务。\n\nStep 3: 卸载 containerd 软件包\n```\n$ yum remove containerd -y\n```\n根据你的系统，可能需要使用适当的软件包管理器（如apt、dnf）来移除 containerd 软件包。\n\nStep 4: 删除 containerd 配置目录\n```\n$ rm -rf /etc/containerd\n```\n这将删除 containerd 的配置文件。\n\nStep 5: 删除 containerd 数据目录\n```\n$ rm -rf /var/lib/containerd\n```\n这将删除 containerd 的数据目录。\n\nStep 6: 清理 containerd 相关的 iptables 规则\n```\n$ iptables -t nat -F\n$ iptables -t mangle -F\n```\n这将清除与 containerd 相关的 iptables 规则。\n\nStep 7: 检查是否有残留的 containerd 配置文件\n```\n$ ls /etc/systemd/system/containerd*\n```\n如果输出中有任何文件，则手动删除它们：\n```\n$ rm /etc/systemd/system/containerd*.service\n```\n\n现在，你的 Kubernetes 集群节点上的 containerd 已经彻底卸载。","slug":"kubernetes/uninstall_cintainerd","published":1,"updated":"2023-08-22T07:29:52.616Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cllowwgwe000hzejx99lkbaqm","content":"<p>要彻底清除 Kubernetes 集群节点上的 containerd，可以按照以下步骤进行：</p>\n<p>Step 1: 停止并移除所有运行的容器</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ crictl ps -a | awk &#x27;&#123;if(NR&gt;1) print $1&#125;&#x27; | xargs -I &#123;&#125; crictl rm &#123;&#125;</span><br></pre></td></tr></table></figure>\n<p>这将停止并删除节点上所有正在运行的容器。</p>\n<p>Step 2: 停止并禁用 containerd 服务</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl stop containerd</span><br><span class=\"line\">$ systemctl disable containerd</span><br></pre></td></tr></table></figure>\n<p>这将停止并禁用 containerd 服务。</p>\n<p>Step 3: 卸载 containerd 软件包</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum remove containerd -y</span><br></pre></td></tr></table></figure>\n<p>根据你的系统，可能需要使用适当的软件包管理器（如apt、dnf）来移除 containerd 软件包。</p>\n<p>Step 4: 删除 containerd 配置目录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rm -rf /etc/containerd</span><br></pre></td></tr></table></figure>\n<p>这将删除 containerd 的配置文件。</p>\n<p>Step 5: 删除 containerd 数据目录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rm -rf /var/lib/containerd</span><br></pre></td></tr></table></figure>\n<p>这将删除 containerd 的数据目录。</p>\n<p>Step 6: 清理 containerd 相关的 iptables 规则</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ iptables -t nat -F</span><br><span class=\"line\">$ iptables -t mangle -F</span><br></pre></td></tr></table></figure>\n<p>这将清除与 containerd 相关的 iptables 规则。</p>\n<p>Step 7: 检查是否有残留的 containerd 配置文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ls /etc/systemd/system/containerd*</span><br></pre></td></tr></table></figure>\n<p>如果输出中有任何文件，则手动删除它们：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rm /etc/systemd/system/containerd*.service</span><br></pre></td></tr></table></figure>\n\n<p>现在，你的 Kubernetes 集群节点上的 containerd 已经彻底卸载。</p>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":"<p>要彻底清除 Kubernetes 集群节点上的 containerd，可以按照以下步骤进行：</p>\n<p>Step 1: 停止并移除所有运行的容器</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ crictl ps -a | awk &#x27;&#123;if(NR&gt;1) print $1&#125;&#x27; | xargs -I &#123;&#125; crictl rm &#123;&#125;</span><br></pre></td></tr></table></figure>\n<p>这将停止并删除节点上所有正在运行的容器。</p>\n<p>Step 2: 停止并禁用 containerd 服务</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl stop containerd</span><br><span class=\"line\">$ systemctl disable containerd</span><br></pre></td></tr></table></figure>\n<p>这将停止并禁用 containerd 服务。</p>\n<p>Step 3: 卸载 containerd 软件包</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ yum remove containerd -y</span><br></pre></td></tr></table></figure>\n<p>根据你的系统，可能需要使用适当的软件包管理器（如apt、dnf）来移除 containerd 软件包。</p>\n<p>Step 4: 删除 containerd 配置目录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rm -rf /etc/containerd</span><br></pre></td></tr></table></figure>\n<p>这将删除 containerd 的配置文件。</p>\n<p>Step 5: 删除 containerd 数据目录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rm -rf /var/lib/containerd</span><br></pre></td></tr></table></figure>\n<p>这将删除 containerd 的数据目录。</p>\n<p>Step 6: 清理 containerd 相关的 iptables 规则</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ iptables -t nat -F</span><br><span class=\"line\">$ iptables -t mangle -F</span><br></pre></td></tr></table></figure>\n<p>这将清除与 containerd 相关的 iptables 规则。</p>\n<p>Step 7: 检查是否有残留的 containerd 配置文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ls /etc/systemd/system/containerd*</span><br></pre></td></tr></table></figure>\n<p>如果输出中有任何文件，则手动删除它们：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ rm /etc/systemd/system/containerd*.service</span><br></pre></td></tr></table></figure>\n\n<p>现在，你的 Kubernetes 集群节点上的 containerd 已经彻底卸载。</p>\n"},{"title":"install nodejs","date":"2023-08-22T08:35:17.000Z","_content":"要在Ubuntu上安装Node.js和NPM，你可以按照以下步骤进行操作：\n\n1. 首先，打开终端。\n\n2. 更新系统软件包列表：\n\n   ```\n   sudo apt update\n   ```\n\n3. 安装Node.js：\n\n   ```\n   sudo apt install nodejs\n   ```\n\n   这将安装最新版本的Node.js。\n\n4. 安装npm：\n\n   ```\n   sudo apt install npm\n   ```\n\n   这将安装最新版本的npm。\n\n5. 检查Node.js和npm的安装版本：\n\n   ```\n   nodejs --version\n   npm --version\n   ```\n\n   在命令行上将显示Node.js和npm的版本号。\n\n如果你希望安装特定版本的Node.js和npm，可以使用nvm（Node Version Manager）工具。\n\n1. 安装nvm：\n\n   ```\n   curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash\n   ```\n\n   这将下载并运行nvm的安装脚本。\n\n2. 重新打开终端，或者在当前终端中运行以下命令以启用nvm：\n\n   ```\n   source ~/.bashrc\n   ```\n\n3. 安装所需版本的Node.js：\n\n   ```\n   nvm install 18.17.1\n   ```\n\n   这将安装Node.js v18.17.1。\n\n4. 使用所需版本的Node.js：\n\n   ```\n   nvm use 18.17.1\n   ```\n\n   这将在当前终端会话中使用Node.js v18.17.1。\n\n5. 安装所需版本的npm：\n\n   ```\n   npm install -g npm@9.6.7\n   ```\n\n   这将安装npm v9.6.7。\n\n6. 检查Node.js和npm的安装版本：\n\n   ```\n   node --version\n   npm --version\n   ```\n\n   在命令行上将显示Node.js v18.17.1和npm v9.6.7的版本号。\n\n请注意，使用nvm安装的Node.js版本仅在您的当前终端会话中有效。如果您希望在其他终端会话中使用相同的Node.js版本，您需要运行相应的`nvm use`命令。","source":"_posts/nodejs/install_nodejs.md","raw":"---\ntitle: install nodejs\ndate: 2023-08-22 16:35:17\ntags: nodejs\n---\n要在Ubuntu上安装Node.js和NPM，你可以按照以下步骤进行操作：\n\n1. 首先，打开终端。\n\n2. 更新系统软件包列表：\n\n   ```\n   sudo apt update\n   ```\n\n3. 安装Node.js：\n\n   ```\n   sudo apt install nodejs\n   ```\n\n   这将安装最新版本的Node.js。\n\n4. 安装npm：\n\n   ```\n   sudo apt install npm\n   ```\n\n   这将安装最新版本的npm。\n\n5. 检查Node.js和npm的安装版本：\n\n   ```\n   nodejs --version\n   npm --version\n   ```\n\n   在命令行上将显示Node.js和npm的版本号。\n\n如果你希望安装特定版本的Node.js和npm，可以使用nvm（Node Version Manager）工具。\n\n1. 安装nvm：\n\n   ```\n   curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash\n   ```\n\n   这将下载并运行nvm的安装脚本。\n\n2. 重新打开终端，或者在当前终端中运行以下命令以启用nvm：\n\n   ```\n   source ~/.bashrc\n   ```\n\n3. 安装所需版本的Node.js：\n\n   ```\n   nvm install 18.17.1\n   ```\n\n   这将安装Node.js v18.17.1。\n\n4. 使用所需版本的Node.js：\n\n   ```\n   nvm use 18.17.1\n   ```\n\n   这将在当前终端会话中使用Node.js v18.17.1。\n\n5. 安装所需版本的npm：\n\n   ```\n   npm install -g npm@9.6.7\n   ```\n\n   这将安装npm v9.6.7。\n\n6. 检查Node.js和npm的安装版本：\n\n   ```\n   node --version\n   npm --version\n   ```\n\n   在命令行上将显示Node.js v18.17.1和npm v9.6.7的版本号。\n\n请注意，使用nvm安装的Node.js版本仅在您的当前终端会话中有效。如果您希望在其他终端会话中使用相同的Node.js版本，您需要运行相应的`nvm use`命令。","slug":"nodejs/install_nodejs","published":1,"updated":"2023-08-22T08:36:07.375Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cllowwgwi000kzejx7vpqb5le","content":"<p>要在Ubuntu上安装Node.js和NPM，你可以按照以下步骤进行操作：</p>\n<ol>\n<li><p>首先，打开终端。</p>\n</li>\n<li><p>更新系统软件包列表：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装Node.js：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install nodejs</span><br></pre></td></tr></table></figure>\n\n<p>这将安装最新版本的Node.js。</p>\n</li>\n<li><p>安装npm：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install npm</span><br></pre></td></tr></table></figure>\n\n<p>这将安装最新版本的npm。</p>\n</li>\n<li><p>检查Node.js和npm的安装版本：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nodejs --version</span><br><span class=\"line\">npm --version</span><br></pre></td></tr></table></figure>\n\n<p>在命令行上将显示Node.js和npm的版本号。</p>\n</li>\n</ol>\n<p>如果你希望安装特定版本的Node.js和npm，可以使用nvm（Node Version Manager）工具。</p>\n<ol>\n<li><p>安装nvm：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash</span><br></pre></td></tr></table></figure>\n\n<p>这将下载并运行nvm的安装脚本。</p>\n</li>\n<li><p>重新打开终端，或者在当前终端中运行以下命令以启用nvm：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bashrc</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装所需版本的Node.js：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install 18.17.1</span><br></pre></td></tr></table></figure>\n\n<p>这将安装Node.js v18.17.1。</p>\n</li>\n<li><p>使用所需版本的Node.js：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm use 18.17.1</span><br></pre></td></tr></table></figure>\n\n<p>这将在当前终端会话中使用Node.js v18.17.1。</p>\n</li>\n<li><p>安装所需版本的npm：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g npm@9.6.7</span><br></pre></td></tr></table></figure>\n\n<p>这将安装npm v9.6.7。</p>\n</li>\n<li><p>检查Node.js和npm的安装版本：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node --version</span><br><span class=\"line\">npm --version</span><br></pre></td></tr></table></figure>\n\n<p>在命令行上将显示Node.js v18.17.1和npm v9.6.7的版本号。</p>\n</li>\n</ol>\n<p>请注意，使用nvm安装的Node.js版本仅在您的当前终端会话中有效。如果您希望在其他终端会话中使用相同的Node.js版本，您需要运行相应的<code>nvm use</code>命令。</p>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":false,"excerpt":"","more":"<p>要在Ubuntu上安装Node.js和NPM，你可以按照以下步骤进行操作：</p>\n<ol>\n<li><p>首先，打开终端。</p>\n</li>\n<li><p>更新系统软件包列表：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装Node.js：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install nodejs</span><br></pre></td></tr></table></figure>\n\n<p>这将安装最新版本的Node.js。</p>\n</li>\n<li><p>安装npm：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install npm</span><br></pre></td></tr></table></figure>\n\n<p>这将安装最新版本的npm。</p>\n</li>\n<li><p>检查Node.js和npm的安装版本：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nodejs --version</span><br><span class=\"line\">npm --version</span><br></pre></td></tr></table></figure>\n\n<p>在命令行上将显示Node.js和npm的版本号。</p>\n</li>\n</ol>\n<p>如果你希望安装特定版本的Node.js和npm，可以使用nvm（Node Version Manager）工具。</p>\n<ol>\n<li><p>安装nvm：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash</span><br></pre></td></tr></table></figure>\n\n<p>这将下载并运行nvm的安装脚本。</p>\n</li>\n<li><p>重新打开终端，或者在当前终端中运行以下命令以启用nvm：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bashrc</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装所需版本的Node.js：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install 18.17.1</span><br></pre></td></tr></table></figure>\n\n<p>这将安装Node.js v18.17.1。</p>\n</li>\n<li><p>使用所需版本的Node.js：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm use 18.17.1</span><br></pre></td></tr></table></figure>\n\n<p>这将在当前终端会话中使用Node.js v18.17.1。</p>\n</li>\n<li><p>安装所需版本的npm：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g npm@9.6.7</span><br></pre></td></tr></table></figure>\n\n<p>这将安装npm v9.6.7。</p>\n</li>\n<li><p>检查Node.js和npm的安装版本：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node --version</span><br><span class=\"line\">npm --version</span><br></pre></td></tr></table></figure>\n\n<p>在命令行上将显示Node.js v18.17.1和npm v9.6.7的版本号。</p>\n</li>\n</ol>\n<p>请注意，使用nvm安装的Node.js版本仅在您的当前终端会话中有效。如果您希望在其他终端会话中使用相同的Node.js版本，您需要运行相应的<code>nvm use</code>命令。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cllowwgw00005zejxbgnsftko","category_id":"cllowwgw9000azejx2g9igc3e","_id":"cllowwgwk000lzejxcpx92vtn"},{"post_id":"cllowwgw40007zejxhgtrboq6","category_id":"cllowwgwc000ezejxa2a9c2zp","_id":"cllowwgwn000qzejx6hw1clwy"},{"post_id":"cllowwgw80009zejx8h9i5wui","category_id":"cllowwgwc000ezejxa2a9c2zp","_id":"cllowwgwo000tzejxcuq29yq7"},{"post_id":"cllowwgwa000bzejx2sgh9e5w","category_id":"cllowwgwm000ozejxcs8m3634","_id":"cllowwgwq000yzejxck3r49xv"},{"post_id":"cllowwgwb000czejx4gd04ujh","category_id":"cllowwgwm000ozejxcs8m3634","_id":"cllowwgwt0011zejxc1iodeto"},{"post_id":"cllowwgwc000gzejx5db1hcsl","category_id":"cllowwgwm000ozejxcs8m3634","_id":"cllowwgwu0014zejxhj8797xp"},{"post_id":"cllowwgwe000hzejx99lkbaqm","category_id":"cllowwgwm000ozejxcs8m3634","_id":"cllowwgwu0016zejxbzy2gmke"}],"PostTag":[{"post_id":"cllowwgw00005zejxbgnsftko","tag_id":"cllowwgw60008zejxf3gs0xq2","_id":"cllowwgwc000fzejxb8frhsyn"},{"post_id":"cllowwgw40007zejxhgtrboq6","tag_id":"cllowwgwb000dzejx0mtl6c7f","_id":"cllowwgwk000mzejxbgu93ay7"},{"post_id":"cllowwgw80009zejx8h9i5wui","tag_id":"cllowwgwb000dzejx0mtl6c7f","_id":"cllowwgwm000pzejx20p57lx1"},{"post_id":"cllowwgwa000bzejx2sgh9e5w","tag_id":"cllowwgwl000nzejxavvu5z36","_id":"cllowwgwo000uzejx0b83c6b8"},{"post_id":"cllowwgwb000czejx4gd04ujh","tag_id":"cllowwgwl000nzejxavvu5z36","_id":"cllowwgwq000xzejx2euq37j5"},{"post_id":"cllowwgwc000gzejx5db1hcsl","tag_id":"cllowwgwo000vzejx788wc9s7","_id":"cllowwgwt0012zejxd9mngsp7"},{"post_id":"cllowwgwe000hzejx99lkbaqm","tag_id":"cllowwgwr0010zejxa45chfmv","_id":"cllowwgwu0015zejxevdlatlg"},{"post_id":"cllowwgwi000kzejx7vpqb5le","tag_id":"cllowwgwt0013zejx5nd8hsen","_id":"cllowwgwu0017zejxepw1dqx9"}],"Tag":[{"name":"docker","_id":"cllowwgw60008zejxf3gs0xq2"},{"name":"golang","_id":"cllowwgwb000dzejx0mtl6c7f"},{"name":"logging","_id":"cllowwgwl000nzejxavvu5z36"},{"name":"kubernetes","_id":"cllowwgwo000vzejx788wc9s7"},{"name":"containerd","_id":"cllowwgwr0010zejxa45chfmv"},{"name":"nodejs","_id":"cllowwgwt0013zejx5nd8hsen"}]}}